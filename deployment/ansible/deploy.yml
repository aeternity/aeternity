---
- name: Deploy epoch package
  hosts: all
  remote_user: epoch

  vars:
    project_root: "{{ ansible_env.HOME }}/node"
    env: unknown
    config:
      chain:
        persist: true
        db_path: "./db7"

  tasks:
    - name: "Required variables"
      fail: msg="Either remote_package or local_package variables must be defined"
      when: remote_package is not defined and local_package is not defined
      tags: [package]

    - name: "Make sure {{ project_root }} exists"
      file:
          path: "{{ project_root }}"
          state: directory
          mode: 0700

    - name: Download epoch package
      get_url:
        url: "{{ remote_package }}"
        dest: "{{ project_root }}/{{ remote_package | basename }}"
      when: remote_package is defined
      tags: [package]

    - name: Check if epoch binary exists
      stat:
        path: "{{ project_root }}/bin/epoch"
      register: epoch
      tags: [daemon]

    - name: Ping epoch daemon
      command: "{{ project_root }}/bin/epoch ping"
      failed_when: no
      register: ping
      when: epoch.stat.exists == True
      tags: [daemon]

    - name: Stop epoch daemon
      command: "{{ project_root }}/bin/epoch stop"
      when: epoch.stat.exists == True and ping.stdout == "pong"
      tags: [daemon]

    - name: Extract remote epoch package into {{ project_root }}
      unarchive:
        remote_src: yes
        keep_newer: true
        src: "{{ project_root }}/{{ remote_package | basename }}"
        dest: "{{ project_root }}"
      when: remote_package is defined
      tags: [package]

    - name: Extract local epoch package into {{ project_root }}
      unarchive:
        remote_src: no
        keep_newer: true
        src: "{{ local_package }}"
        dest: "{{ project_root }}"
      when: local_package is defined
      tags: [package]

    - name: Plant ENV file
      copy:
        content: "{{ env }}\n"
        dest: "{{ project_root }}/ENV"
      tags: [package]

    - name: "Make sure chain path ( {{ config.chain.db_path }} ) exists"
      file:
        path: "{{ project_root }}/{{ config.chain.db_path }}"
        state: directory
      tags: [config]

    - name: Update configuration
      template:
        src: templates/epoch.yaml.j2
        dest: "{{ project_root }}/epoch.yaml"
        mode: '0600'
      tags: [config]

    - name: Start epoch daemon
      command: "{{ project_root }}/bin/epoch start"
      tags: [daemon]
