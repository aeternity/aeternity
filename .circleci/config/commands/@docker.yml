setup_docker:
  steps:
    - setup_remote_docker:
        docker_layer_caching: true
        version: "20.10.18"

docker_login:
  steps:
    - run:
        name: Login to Docker Hub
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS

docker_build:
  parameters:
    tag:
      type: string
  steps:
    - run:
        name: Build docker image
        command: |
          docker pull << pipeline.parameters.docker_builder_image >>
          docker build -t << pipeline.parameters.docker_repo >>:<< parameters.tag >> .
    - run:
        name: Start docker image
        command: |
          docker run -d -e AE__CHAIN__PERSIST -e AE__FORK_MANAGEMENT__NETWORK_ID \
            --name ae_<< pipeline.git.revision >> \
            << pipeline.parameters.docker_repo >>:<< parameters.tag >> \
            bin/aeternity console -noinput -network_id ae_test
    - run:
        name: Display logs from docker image
        command: |
          docker logs -f ae_<< pipeline.git.revision >>
        background: true
    - run:
        name: Wait for container to be ready
        command: |
          docker exec -it ae_<< pipeline.git.revision >> curl -4 --retry-connrefused --max-time 60 --retry 6 --connect-timeout 10 http://localhost:3013/v2/status
    - run:
        name: Health check
        command: |
          until [ "`docker inspect -f {{.State.Health.Status}} ae_<< pipeline.git.revision >>`"=="healthy" ]; do
              sleep 1;
          done;

docker_manifest:
  parameters:
    manifest_list:
      type: string
    tag:
      type: string
  steps:
    - run:
        name: Create docker manifest
        command: |
          read -a MANIFEST_LIST_ARRAY \<<< "<< parameters.manifest_list >>"
          PREFIX="<< pipeline.parameters.docker_repo >>:"
          MANIFEST_LIST="${MANIFEST_LIST_ARRAY[@]/#/$PREFIX}"
          docker manifest create \
            << pipeline.parameters.docker_repo >>:<< parameters.tag >> \
            $MANIFEST_LIST
    - docker_login
    - run:
        name: Push docker manifest
        command: |
          docker manifest push << pipeline.parameters.docker_repo >>:<< parameters.tag >>

docker_tag:
  parameters:
    src:
      type: string
    tag:
      type: string
  steps:
    - docker_login
    - run:
        name: Tag docker image
        command: |
          docker pull << pipeline.parameters.docker_repo >>:<< parameters.src >>
          docker tag << pipeline.parameters.docker_repo >>:<< parameters.src >> << pipeline.parameters.docker_repo >>:<< parameters.tag >>

docker_push:
  parameters:
    tag:
      type: string
  steps:
    - docker_login
    - run:
        name: Push Docker image
        command: |
          docker push << pipeline.parameters.docker_repo >>:<< parameters.tag >>
