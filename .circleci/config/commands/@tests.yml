eunit:
  parameters:
    otp:
      type: string
    target:
      type: string
  steps:
    - fixed_checkout
    - restore_rebar_cache
    - restore_build_cache:
        otp: << parameters.otp >>
    - run:
        name: Test
        command: |
          epmd -daemon
          make eunit-<< parameters.target >>
    - store_test_results:
        path: eunit_report
    - store_rebar3_crashdump
    - fail_notification

common_tests:
  parameters:
    otp:
      type: string
    target:
      type: string
  steps:
    - fixed_checkout
    - restore_rebar_cache
    - restore_build_cache:
        otp: << parameters.otp >>
    - run:
        name: Test
        command: |
          epmd -daemon
          make << parameters.target >> CT_TEST_FLAGS="--suite=$(.circleci/scripts/split_suites.sh)"
    # Isolates the junit.xml report because additional files in _build/test/logs
    # are somehow causing issue with xunit report upload, parsing and merging
    - run:
        name: move test report
        command: |
          mkdir _build/test/reports
          mv _build/test/logs/junit.xml _build/test/reports/
    - store_test_results:
        path: _build/test/reports
    - run:
        name: trim down artifacts
        command: |
          find _build/test/logs -iname bin | xargs rm -rf
          find _build/test/logs -iname data | xargs rm -rf
          find _build/test/logs -iname releases | xargs rm -rf
          find _build/test/logs -iname extensions | xargs rm -rf
          find _build/test/logs -iname hooks | xargs rm -rf
    - store_artifacts:
        path: _build/test/logs
    - store_rebar3_crashdump
    - fail_notification

test_arch_os_dependencies:
  steps:
    - run:
        name: Test architecture or OS specific functions
        command: |
          make test-arch-os-dependencies

run_docker_system_test:
  steps:
    - run:
        name: Install deps for system tests
        command: |
          make system-test-deps
    - run:
        name: System Tests
        no_output_timeout: 2h
        command: |
          sudo -u ubuntu -E -H make system-test

run_docker_system_smoke_test:
  steps:
    - run:
        name: Install deps for system smoke tests
        command: |
          make system-smoke-test-deps
    - run:
        name: System Smoke Tests
        no_output_timeout: 1h
        command: |
          sudo -u ubuntu -E -H make smoke-test-run

docker_system_test:
  parameters:
    smoke:
      type: boolean
    system_test_host_logs:
      type: string
      default: /tmp/system_test_host
    system_test_logs:
      type: string
      default: system_test/logs
  steps:
    - run:
        name: Print system test host information
        command: |
          uname -a
          free -t -m
    - fixed_checkout
    - install_os_deps
    - install_otp
    - install_libsodium
    - restore_rebar_cache
    - restore_machine_build_cache
    - run:
        name: Prepare ubuntu user (1000:1000) to run docker commands
        command: |
          sudo usermod -aG docker ubuntu
          sudo chown -R ubuntu:ubuntu ~/aeternity
    - when:
        condition:
          not: << parameters.smoke >>
        steps:
          - run_docker_system_test
    - when:
        condition: << parameters.smoke >>
        steps:
          - run_docker_system_smoke_test
    - run:
        name: Collect system test host logs
        command: |
          mkdir << parameters.system_test_host_logs >>
          dmesg > << parameters.system_test_host_logs >>/dmesg.log
        when: always
    - fail_notification_system_test
    - save_machine_build_cache
    - store_test_results:
        path: << parameters.system_test_logs >>
    - store_artifacts:
        path: << parameters.system_test_logs >>
    - store_artifacts:
        path: << parameters.system_test_host_logs >>
