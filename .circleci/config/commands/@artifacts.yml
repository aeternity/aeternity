store_package_artifacts:
  steps:
    - store_artifacts:
        path: << pipeline.parameters.packages_workspace >>
        destination: /

store_rebar3_crashdump:
  steps:
    - store_artifacts:
        path: rebar3.crashdump

upload_artifacts_s3:
  parameters:
    bucket:
      type: string
  steps:
    - attach_workspace:
        at: << pipeline.parameters.packages_workspace >>
    - run:
        name: Upload artifacts to s3
        command: |
          envdir /secrets aws s3 sync --acl public-read << pipeline.parameters.packages_workspace >> s3://<< parameters.bucket >>/

promote_latest_artifact_s3:
  parameters:
    uri:
      type: string
  steps:
    - attach_workspace:
        at: << pipeline.parameters.packages_workspace >>
    - run:
        name: Upload artifacts to s3
        command: |
          BUCKET=$(dirname << parameters.uri >>)
          DST=$(basename << parameters.uri >> | sed -e 's/\(aeternity\)-.*-\(.*\)-\(.*\).tar.gz/\1-latest-\2-\3.tar.gz/g')
          envdir /secrets aws s3 cp --acl public-read << parameters.uri >> $BUCKET/$DST

upload_artifacts_github:
  steps:
    - attach_workspace:
        at: << pipeline.parameters.packages_workspace >>
    - run:
        name: Upload GitHub Release Asset
        command: |
          envdir /secrets /infrastructure/scripts/upload-github-release-assets.sh \
            github_api_token=${GITHUB_API_TOKEN:?} \
            owner=${CIRCLE_PROJECT_USERNAME} \
            repo=${CIRCLE_PROJECT_REPONAME} \
            tag=${CIRCLE_TAG} \
            ASSETS=<< pipeline.parameters.packages_workspace >>/*

upload_artifacts_apt:
  parameters:
    packages_dir:
      type: string
    component:
      type: string
  steps:
    - run:
        name: Checkout APT repository
        command: |
          git clone git@github.com:aeternity/apt-repo.git --branch inbox --single-branch ~/apt-repo
    - run:
        name: Add deb packages
        command: |
          cp << parameters.packages_dir >>/aeternity-node*.deb ~/apt-repo/inbox/aeternity-node/<< parameters.component >>/
    - run:
        name: Setup git
        command: |
          git config --global push.default simple
          git config --global user.email "35604848+aeternity-bot@users.noreply.github.com"
          git config --global user.name "Aeternity node CI"
    - run:
        name: Commit and push
        command: |
          cd ~/apt-repo
          git add -A
          git commit -m "Add aeternity node package to << parameters.component >>" || true
          git push

upload_artifacts_brew:
  parameters:
    packages_dir:
      type: string
    branch:
      type: string
  steps:
    - run:
        name: Checkout Homebrew repository
        command: |
          git clone git@github.com:aeternity/homebrew-aeternity.git --branch << parameters.branch >> --single-branch ~/homebrew-aeternity
    - run:
        name: Update the Homebrew formula
        command: |
          make VERSION
          VERSION=$(cat VERSION)
          PACKAGE_URL=https://github.com/aeternity/aeternity/releases/download/v$VERSION/aeternity-$VERSION-macos-x86_64.tar.gz
          SHA256=$(sha256sum << parameters.packages_dir >>/aeternity-*-macos-x86_64.tar.gz | head -1 | cut -f 1 -d " ")
          cd ~/homebrew-aeternity/
          sed -i "s|^  url .*|  url \"$PACKAGE_URL\"|g" Formula/aeternity-node.rb
          sed -i "s|^  version .*|  version \"$VERSION\"|g" Formula/aeternity-node.rb
          sed -i "s|^  sha256 .*|  sha256 \"$SHA256\"|g" Formula/aeternity-node.rb
    - run:
        name: Setup git
        command: |
          git config --global push.default simple
          git config --global user.email "35604848+aeternity-bot@users.noreply.github.com"
          git config --global user.name "Aeternity node CI"
    - run:
        name: Commit and push
        command: |
          make VERSION
          VERSION=$(cat VERSION)
          cd ~/homebrew-aeternity/
          git add Formula/aeternity-node.rb
          git diff --staged
          git commit -m "Update aeternity-node formula to $VERSION"
          git push

