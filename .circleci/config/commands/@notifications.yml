fail_notification:
  steps:
    - run:
        name: Send failure notification
        environment:
          NOTIFY_BRANCH: << pipeline.parameters.master_branch >>
          HOOK_TEMPLATE: |
            {
              "text": "CircleCI job **%s** failed on branch **%s** by @%s",
              "attachments": [
                {
                  "title": "Build Link",
                  "title_link": "%s",
                  "color": "#FAD6D6"
                }
              ]
            }
        command: |
          if [ -n "$CIRCLE_BRANCH" ]; then
            if [ "$CIRCLE_BRANCH" = "${NOTIFY_BRANCH:?}" ]; then
              HOOK_DATA=$(printf "$HOOK_TEMPLATE" "${CIRCLE_JOB:?}" "${CIRCLE_BRANCH:?}" "${CIRCLE_USERNAME:-unknown}" "${CIRCLE_BUILD_URL:?}")
              curl -X POST -H 'Content-Type: application/json' ${ROCKET_HOOK_URL:?} --data "${HOOK_DATA:?}"
            fi
          fi
        when: on_fail


fail_notification_nix:
  steps:
    - run:
        name: Send failure notification
        environment:
          NOTIFY_BRANCH: << pipeline.parameters.master_branch >>
          HOOK_TEMPLATE: |
            {
              "text": "CircleCI job **%s** failed on branch **%s** by @%s",
              "attachments": [
                {
                  "title": "Build Link",
                  "title_link": "%s",
                  "color": "#FAD6D6"
                }
              ]
            }
        command: |
          if [ -n "$CIRCLE_BRANCH" ]; then
            if [ "$CIRCLE_BRANCH" = "${NOTIFY_BRANCH:?}" ]; then
              HOOK_DATA=$(printf "$HOOK_TEMPLATE" "${CIRCLE_JOB:?}" "${CIRCLE_BRANCH:?}" "${CIRCLE_USERNAME:-unknown}" "${CIRCLE_BUILD_URL:?}")
              nix-shell webhook.nix -j auto --run "curl -X POST -H 'Content-Type: application/json' ${ROCKET_HOOK_URL:?} --data \"${HOOK_DATA:?}\""
            fi
          fi
        when: on_fail

fail_notification_system_test:
  steps:
    - run:
        name: Send failure notification on system test
        environment:
          NOTIFY_BRANCH: << pipeline.parameters.master_branch >>
          HOOK_TEMPLATE: |
            {
              "text": "CircleCI job **%s** failed on branch **%s** by @%s",
              "attachments": [
                {
                  "title": "Build Link",
                  "title_link": "%s",
                  "color": "#FAD6D6"
                }
              ]
            }
        command: |
          if [ -n "$CIRCLE_BRANCH" ]; then
            if [ "$CIRCLE_BRANCH" = "${NOTIFY_BRANCH:?}" ]; then
              HOOK_DATA=$(printf "$HOOK_TEMPLATE" "${CIRCLE_JOB:?}" "${CIRCLE_BRANCH:?}" "${CIRCLE_USERNAME:-unknown}" "${CIRCLE_BUILD_URL:?}")
              curl -X POST -H 'Content-Type: application/json' ${ROCKET_HOOK_URL_SYSTEM_TEST:?} --data "${HOOK_DATA:?}"
            fi
          fi
        when: on_fail
