swagger: '2.0'
openapi: '3.0.0'
info:
  description: 'This is the [Aeternity](https://www.aeternity.com/) Epoch API.'
  version: 1.0.0
  title: Aeternity Epoch
  termsOfService: 'https://www.aeternity.com/terms/'
  contact:
    email: apiteam@aeternity.com
basePath: /v2
tags:
  - name: external
    description: External API
  - name: internal
    description: Internal API
schemes:
  - http
paths:

###
## External APIs definitions
###

  /ping:
    post:
      tags:
        - external
      operationId: Ping
      description: ''
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Ping a peer
          required: true
          schema:
            $ref: '#/definitions/Ping'
      responses:
        '200':
          description: Sample response
          schema:
            $ref: '#/definitions/Ping'
        '403':
          description: Not allowed (node is blocked) 
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Different genesis blocks
          schema:
            $ref: '#/definitions/Error'
      security: []
  /top:
    get:
      tags:
        - external
      operationId: GetTop
      description: 'Get the top block header'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Top'
      security: []
  /block-by-height:
    get:
      tags:
        - external
      operationId: GetBlockByHeight
      description: 'Get a block by height'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: query
          name: height
          description: 'Height of the block to fetch'
          required: true
          type : integer
      responses:
        '200':
          description: The block being found  
          schema:
            $ref: '#/definitions/Block'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block-by-hash:
    get:
      tags:
        - external
      operationId: GetBlockByHash 
      description: 'Get a block by hash'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: query
          name: hash
          description: 'Hash of the block to fetch'
          required: true
          type : string
      responses:
        '200':
          description: The block being found  
          schema:
            $ref: '#/definitions/Block'
        '400':
          description: Invalid hash 
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block:
    post:
      tags:
        - external
      operationId: PostBlock 
      description: 'Post a new block'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Put a new block to node
          required: true
          schema:
            $ref: '#/definitions/Block'
      responses:
        '200':
          description: successful operation
        '400':
          description: Block or header validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /tx:
    post:
      tags:
        - external
      operationId: PostTx
      description: 'Post a new transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Put a new transaction to node
          required: true
          schema:
            $ref: '#/definitions/Tx'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
      security: []
  /transactions:
    get:
      tags:
        - external
      operationId: GetTxs
      description: 'Get transactions in the mempool'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Transactions'
  /account/balance:
    get:
      tags:
        - external
      operationId: GetAccountBalance
      description: 'Get account''s balance'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: pub_key
          description: 'Public key to extract balance for'
          type : string
      responses:
        '200':
          description: Account's balance
          schema:
            $ref: '#/definitions/Balance'
        '400':
          description: Invalid address
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/Error'
      security: []

###
## Internal APIs definitions
###

  /spend-tx:
    post:
      tags:
        - internal
      operationId: PostSpendTx
      description: 'Create spend transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new spend transaction
          required: true
          schema:
            $ref: '#/definitions/SpendTx'
      responses:
        '200':
          description: successful operation
        '404':
          description: Spend transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracles:
  ## Not implemented yet, returns HTTP 501 response code
    get:
      tags:
        - internal
      operationId: GetActiveRegisteredOracles
      description: 'Get active registered oracles'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Active registered oracles
          schema:
            $ref: '#/definitions/RegisteredOracles'
      security: []
  /oracle-questions:
  ## Not implemented yet, returns HTTP 501 response code
    get:
      tags:
        - internal
      operationId: GetOracleQuestions
      description: 'Get active oracle questions'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: oracle_pub_key
          description: 'Oracle public key'
          required: true
          type : string
      responses:
        '200':
          description: Active oracle questions
          schema:
            $ref: '#/definitions/OracleQuestions'
        '404':
          description: Oracle not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-register-tx:
    post:
      tags:
        - internal
      operationId: PostOracleRegisterTx
      description: 'Create oracle register transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle register transaction
          required: true
          schema:
            $ref: '#/definitions/OracleRegisterTx'
      responses:
        '200':
          description: successful operation
        '404':
          description: Oracle register transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-query-tx:
    post:
      tags:
        - internal
      operationId: PostOracleQueryTx
      description: 'Create oracle query transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle query transaction
          required: true
          schema:
            $ref: '#/definitions/OracleQueryTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OracleQueryId'
        '404':
          description: Oracle query transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-response-tx:
    post:
      tags:
        - internal
      operationId: PostOracleResponseTx
      description: 'Create oracle response transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle response transaction
          required: true
          schema:
            $ref: '#/definitions/OracleResponseTx'
      responses:
        '200':
          description: successful operation
        '404':
          description: Oracle response transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /account/pub-key:
    get:
      tags:
        - internal
      operationId: GetPubKey
      description: 'Get user''s public key address'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PubKey'
        '404':
          description: No key pair 
          schema:
            $ref: '#/definitions/Error'
      security: []

## CAUTION: debug endpoints, implementation may be inefficient
  /balances:
    get:
      tags:
        - external
      operationId: GetAccountsBalances
      description: 'Get all users'' balances'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsBalances'
        '403':
          description: Balances not enabled
          schema:
            $ref: '#/definitions/Error'
      security: []
  /version:
    get:
      tags:
        - external
      operationId: GetVersion
      description: 'Get node''s version'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Version'
      security: []
  /info:
    get:
      tags:
        - external
      operationId: GetInfo
      description: 'Get node info'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Info'
        '403':
          description: Info not enabled
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/number:
    get:
      tags:
        - internal
      operationId: GetBlockNumber
      description: 'Get the current block''s height'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
      responses:
        '200':
          description: The current block's height 
          schema:
            $ref: '#/definitions/BlockHeight'
      security: []
  /block/height/{height}:
    get:
      tags:
        - internal
      operationId: GetBlockByHeightInternal
      description: 'Get a block by height'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path 
          name: height
          description: 'Height of the block to fetch'
          required: true
          type : integer
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The block being found 
          schema:
            $ref: '#/definitions/GenericBlock'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/hash/{hash}:
    get:
      tags:
        - internal
      operationId: GetBlockByHashInternal
      description: 'Get a block by hash'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path 
          name: hash
          description: 'Hash of the block to fetch'
          required: true
          type : string 
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The block being found  
          schema:
            $ref: '#/definitions/GenericBlock'
        '400':
          description: Invalid hash 
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/genesis:
    get:
      tags:
        - internal
      operationId: GetBlockGenesis
      description: 'Get the genesis block'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The genesis block 
          schema:
            $ref: '#/definitions/GenericBlock'
      security: []
  /block/latest:
    get:
      tags:
        - internal
      operationId: GetBlockLatest
      description: 'Get the top block'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The top block 
          schema:
            $ref: '#/definitions/GenericBlock'
      security: []
  /block/pending:
    get:
      tags:
        - internal
      operationId: GetBlockPending
      description: 'Get the block being mined'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The pending block with invalid nonce and pow evidence 
          schema:
            $ref: '#/definitions/GenericBlock'
        '404':
          description: No pending block (node not mining)
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/txs/count/hash/{hash}:
    get:
      tags:
        - internal
      operationId: GetBlockTxsCountByHash
      description: 'Get a block transactions count by hash'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path 
          name: hash
          description: 'Hash of the block to fetch'
          required: true
          type : string 
      responses:
        '200':
          description: The count of transactions in the block  
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
        '400':
          description: Invalid hash 
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/txs/count/height/{height}:
    get:
      tags:
        - internal
      operationId: GetBlockTxsCountByHeight
      description: 'Get a block transactions count by height'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path 
          name: height
          description: 'Height of the block to fetch'
          required: true
          type : integer
      responses:
        '200':
          description: The count of transactions in the block  
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/txs/count/genesis:
    get:
      tags:
        - internal
      operationId: GetGenesisBlockTxsCount
      description: 'Get the genesis block transactions count'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
      responses:
        '200':
          description: The count of transactions in the genesis block  
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
      security: []
  /block/txs/count/latest:
    get:
      tags:
        - internal
      operationId: GetLatestBlockTxsCount
      description: 'Get the latest block transactions count'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
      responses:
        '200':
          description: The count of transactions in the latest block  
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
      security: []
  /block/txs/count/pending:
    get:
      tags:
        - internal
      operationId: GetPendingBlockTxsCount
      description: 'Get the pending block transactions count'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
      responses:
        '200':
          description: The count of transactions in the pending block  
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
      security: []
  /block/tx/height/{height}/{tx_index}:
    get:
      tags:
        - internal
      operationId: GetTransactionFromBlockHeight
      description: 'Get a transaction by index in the block by height'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path 
          name: height
          description: 'Height of the block to search for'
          required: true
          type: integer
        - in: path 
          name: tx_index
          description: 'Index of the transaction in the block'
          required: true
          type: integer
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The transaction found 
          schema:
            $ref: '#/definitions/SingleTxHashOrObject'
        '404':
          description: Block or transaction not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/txs/list/height:
    get:
      tags:
        - internal
      operationId: GetTxsListFromBlockRangeByHeight
      description: 'Get transactions list from a block range by height'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: query 
          name: from 
          description: 'Height of the block to start the range'
          required: true
          type : integer
          minimum: 0
        - in: query 
          name: to
          description: 'Height of the block to end the range'
          required: true
          type : integer
          minimum: 0
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The list of transactions in block range
          schema:
            $ref: '#/definitions/GenericTxArray'
        '400':
          description: Invalid range
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Range not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/tx/hash/{hash}/{tx_index}:
    get:
      tags:
        - internal
      operationId: GetTransactionFromBlockHash
      description: 'Get a transaction by index in the block by hash'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path 
          name: hash
          description: 'Hash of the block to search for'
          required: true
          type: string 
        - in: path 
          name: tx_index
          description: 'Index of the transaction in the block'
          required: true
          type: integer
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The transaction found 
          schema:
            $ref: '#/definitions/SingleTxHashOrObject'
        '404':
          description: Block or transaction not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/tx/latest/{tx_index}:
    get:
      tags:
        - internal
      operationId: GetTransactionFromBlockLatest
      description: 'Get a transaction by index in the latest block'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: path 
          name: tx_index
          description: 'Index of the transaction in the block'
          required: true
          type: integer
        - in: query
          name: tx_objects
          description: 'Transactions as objects (default is as message pack hashes)'
          type: boolean
          default: false
      responses:
        '200':
          description: The transaction found 
          schema:
            $ref: '#/definitions/SingleTxHashOrObject'
        '404':
          description: Block or transaction not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block/txs/list/hash:
    get:
      tags:
        - internal
      operationId: GetTxsListFromBlockRangeByHash
      description: 'Get transactions list from a block range by hash'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: query 
          name: from 
          description: 'Hash of the block to start the range'
          required: true
          type : string
          minimum: 0
        - in: query 
          name: to
          description: 'Hash of the block to end the range'
          required: true
          type : string
          minimum: 0
        - in: query
          name: tx_objects
          description: 'Transactions encoding: MessagePack (default) or JSON'
          type: boolean
          default: false
      responses:
        '200':
          description: The list of transactions in block range
          schema:
            $ref: '#/definitions/GenericTxArray'
        '400':
          description: Invalid range
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Range not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /contract/compile:
    post:
      tags:
        - external
      operationId: 'CompileContract'
      description: 'Compila a ring contract from source and return byte code'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: contract code
          required: true
          schema:
            $ref: '#/definitions/Contract'
      responses:
        '200':
          description: Byte code response
          schema:
            $ref: '#/definitions/ByteCode'
        '403':
          description: Invalid contract
          schema:
            $ref: '#/definitions/Error'
  /contract/call:
    post:
      tags:
        - external
      operationId: 'CallContract'
      description: 'Call a ring function with a given name and argument in the given bytecode.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: contract call
          required: true
          schema:
            $ref: '#/definitions/ContractCall'
      responses:
        '200':
          description: Resulting state map
          schema:
            $ref: '#/definitions/CallResult'
        '403':
          description: Invalid contract
          schema:
            $ref: '#/definitions/Error'


definitions:
  EncodedHash:
    type: string
  Pow:
    type: array
    items:
      type: integer
      format: int32
    minItems: 42
    maxItems: 42
  Uri:
    type: string
    ## format: uri
  Header:
    type: object
    properties:
      height:
        type: integer
        format: int64
      prev_hash:
        $ref: '#/definitions/EncodedHash'
      state_hash:
        $ref: '#/definitions/EncodedHash'
      txs_hash:
        $ref: '#/definitions/EncodedHash'
      target:
        type: integer
        format: int64
      nonce:
        type: integer
        format: uint64
      time:
        type: integer
        format: int64
      version:
        type: integer
      pow:
        $ref: '#/definitions/Pow'
  Block:
    allOf:
      - $ref: '#/definitions/Header'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Tx'
  GenericBlock:
    allOf:
      - $ref: '#/definitions/Header'
      - type: object
        discriminator: data_schema
        properties:
          data_schema:
            type: string
          hash:
            $ref: '#/definitions/EncodedHash'
        required:
        - data_schema
  BlockWithTxs:
    allOf:
      - $ref: '#/definitions/GenericBlock'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/SignedTxObject'
  BlockWithTxsHashes:
    allOf:
      - $ref: '#/definitions/GenericBlock'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Tx'
  Top:
    allOf:
      - $ref: '#/definitions/Header'
      - type: object
        properties:
          hash:
            type: string
  GenericTxArray:
    type: object
    discriminator: data_schema
    properties:
      data_schema:
        type: string
    required:
    - data_schema
  TxMsgPackHashes:
    allOf:
      - $ref: '#/definitions/GenericTxArray'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Tx'
  TxObjects:
    allOf:
      - $ref: '#/definitions/GenericTxArray'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/SignedTxObject'
  Ping:
    type: object
    properties:
      source:
        type: string
      genesis_hash:
        type: string
      best_hash:
        type: string
      difficulty:
        type: number
      share:
        type: integer
        maximum: 32
      peers:
        type: array
        items:
          $ref: '#/definitions/Uri'
          maxItems: 32
    required:
    - source
    - genesis_hash
    - best_hash
    - difficulty
  Balance:
    type: object
    properties:
      balance:
        type: integer
        format: int64
  Tx:
    type: object
    properties:
       tx:
         type: string
  Transactions:
    type: array
    items:
      $ref: '#/definitions/Tx'
  RegisteredOracles:
    type: array
    items:
      type: object
      properties:
        address:
          type: string
        query_format:
          type: string
        response_format:
          type: string
        query_fee:
          type: string
        expires_at:
          type: integer
          format: int64
  OracleQuestions:
    type: array
    items:
      type: object
      properties:
        query_id:
          type: string
        query:
          type: string
        query_fee:
          type: string
        expires_at:
          type: integer
          format: int64
  SpendTx:
    type: object
    properties:
      recipient_pubkey:
        type: string
      amount:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
  OracleRegisterTx:
    type: object
    properties:
      query_format:
        type: string
      response_format:
        type: string
      query_fee:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
      ttl:
        $ref: '#/definitions/TTL'
  OracleQueryTx:
    type: object
    properties:
      oracle_pubkey:
        type: string
      query:
        type: string
      query_fee:
        type: integer
        format: int64
      query_ttl:
        $ref: '#/definitions/TTL'
      response_ttl:
        $ref: '#/definitions/RelativeTTL'
      fee:
        type: integer
        format: int64
  OracleResponseTx:
    type: object
    properties:
      query_id:
        type: string
      response:
        type: string
      fee:
        type: integer
        format: int64
  TTL:
    type: object
    properties:
      type:
        type: string
        enum: ["delta", "block"]
      value:
        type: integer
        format: int64
  RelativeTTL:
    type: object
    properties:
      type:
        type: string
        enum: ["delta"]
      value:
        type: integer
        format: int64
  OracleQueryId:
    type: object
    properties:
      query_id:
        type: string
  PubKey:
    type: object
    properties:
      pub_key:
        type: string
  AccountsBalances:
    type: object
    properties:
      accounts_balances:
        type: array
        items:
          $ref: '#/definitions/AccountBalance'
  AccountBalance:
    type: object
    properties:
      pub_key:
        type: string
      balance:
        type: integer
        format: int64
  Version:
    type: object
    properties:
      version:
        type: string
      revision:
        type: string
      genesis_hash:
        type: string
  Info:
    type: object
    properties:
      last_30_blocks_time:
        type: array
        items:
          $ref: '#/definitions/BlockTimeSummary'
  BlockTimeSummary:
    type: object
    properties:
      height:
        type: integer
        format: int64
      time:
        type: integer
        format: int64
      time_delta_to_parent:
        type: integer
        format: int64
      difficulty:
        type: number
  BlockHeight:
    type: object
    properties:
      height:
        type: integer
        format: int64
        description: Blocks's height
    required:
    - height

  SingleTxHashOrObject:
    type: object
    discriminator: data_schema 
    properties:
      data_schema:
        type: string
    required:
    - data_schema
  SingleTxObject:
    allOf:
      - $ref: '#/definitions/TxHashOrObject'
      - type: object
        properties:
          transaction:
            $ref: '#/definitions/SignedTxObject'
        required:
        - transaction
  SingleTxHash:
    allOf:
      - $ref: '#/definitions/TxHashOrObject'
      - type: object
        properties:
          transaction:
            $ref: '#/definitions/Tx'
        required:
        - transaction
  SignedTxObject:
    type: object
    properties:
      tx:
        $ref: '#/definitions/GenericTxObject'
      signatures:
        type: array
        minItems: 1
        items:
          type: string
## readable JSON objects for transactions:
  GenericTxObject:
    type: object
    discriminator: type 
    properties:
      type:
        type: string
      vsn:
        type: integer
    required:
    - type
  CoinbaseTxObject:
    allOf:
      - $ref: '#/definitions/GenericTxObject'
      - type: object
        properties:
          account: string
        required:
        - account
  SpendTxObject:
    allOf:
      - $ref: '#/definitions/GenericTxObject'
      - type: object
        properties:
          sender: string
          recipient: string
          amount: integer 
          fee: integer 
          nonce: integer 
        required:
        - sender
        - recipient
        - amount
        - fee
        - nonce
  OracleRegisterTxObject:
    allOf:
      - $ref: '#/definitions/GenericTxObject'
      - type: object
        properties:
          sender: string
          nonce: integer 
          que: string
          response_spec: string
          ttl: 
            $ref: '#/definitions/TTL'
          fee: integer
        required:
        - account
        - nonce
        - query_spec
        - response_spec
        - ttl
        - fee
  OracleQueryTxObject:
    allOf:
      - $ref: '#/definitions/GenericTxObject'
      - type: object
        properties:
          sender: string
          nonce: integer 
          oracle: string
          query: string
          query_fee: integer
          query_ttl: 
            $ref: '#/definitions/TTL'
          response_ttl: 
            $ref: '#/definitions/TTL'
          fee: integer
        required:
        - sender
        - nonce
        - oracle
        - query
        - query_fee
        - query_ttl
        - response_ttl
        - fee
  OracleResponseTxObject:
    allOf:
      - $ref: '#/definitions/GenericTxObject'
      - type: object
        properties:
          sender: string
          nonce: integer 
          oracle: string
          query: string
          query_fee: integer
          query_ttl: 
            $ref: '#/definitions/TTL'
          response_ttl: 
            $ref: '#/definitions/TTL'
          fee: integer
        required:
        - account
        - nonce
        - query_spec
        - response_spec
        - ttl
        - fee
  Error:
    type: object
    properties:
      reason:
        type: string
  Contract:
    type: object
    properties:
      code:
        type: string
      options:
        type: string
  ByteCode:
    type: object
    properties:
      bytecode: string
  ContractCall:
    type: object
    properties:
      code:
        type: string
      function:
        type: string
      arg:
        type: string
  CallResult:
    type: object
    properties:
      out:
        type: string


externalDocs:
  description: Find out more about Aeternity
  url: 'http://www.aeternity.com'
