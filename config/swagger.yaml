swagger: '2.0'
openapi: '3.0.0'
info:
  description: 'This is the [Aeternity](https://www.aeternity.com/) Epoch API.'
  version: 1.0.0
  title: Aeternity Epoch
  termsOfService: 'https://www.aeternity.com/terms/'
  contact:
    email: apiteam@aeternity.com
basePath: /v1
tags:
  - name: external
    description: External API
  - name: internal
    description: Internal API
schemes:
  - http
paths:

###
## External APIs definitions
###

  /ping:
    post:
      tags:
        - external
      operationId: Ping
      description: ''
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Ping a peer
          required: true
          schema:
            $ref: '#/definitions/Ping'
      responses:
        '200':
          description: Sample response
          schema:
            $ref: '#/definitions/Ping'
        '403':
          description: Not allowed (node is blocked) 
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Different genesis blocks
          schema:
            $ref: '#/definitions/Error'
      security: []
  /top:
    get:
      tags:
        - external
      operationId: GetTop
      description: 'Get the top block header'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Top'
      security: []
  /block-by-height:
    get:
      tags:
        - external
      operationId: GetBlockByHeight
      description: 'Get a block by height'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: query
          name: height
          description: 'Height of the block to fetch'
          required: true
          type : integer
      responses:
        '200':
          description: The block being found  
          schema:
            $ref: '#/definitions/Block'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block-by-hash:
    get:
      tags:
        - external
      operationId: GetBlockByHash 
      description: 'Get a block by hash'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: 
        - in: query
          name: hash
          description: 'Hash of the block to fetch'
          required: true
          type : string
      responses:
        '200':
          description: The block being found  
          schema:
            $ref: '#/definitions/Block'
        '400':
          description: Invalid hash 
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /block:
    post:
      tags:
        - external
      operationId: PostBlock 
      description: 'Post a new block'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Put a new block to node
          required: true
          schema:
            $ref: '#/definitions/Block'
      responses:
        '200':
          description: successful operation
        '400':
          description: Block or header validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /tx:
    post:
      tags:
        - external
      operationId: PostTx
      description: 'Post a new transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Put a new transaction to node
          required: true
          schema:
            $ref: '#/definitions/Tx'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
      security: []
  /transactions:
    get:
      tags:
        - external
      operationId: GetTxs
      description: 'Get transactions in the mempool'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Transactions'
  /account/balance:
    get:
      tags:
        - external
      operationId: GetAccountBalance
      description: 'Get account''s balance'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: pub_key
          description: 'Public key to extract balance for'
          type : string
      responses:
        '200':
          description: Account's balance
          schema:
            $ref: '#/definitions/Balance'
        '400':
          description: Invalid address
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/Error'
      security: []

###
## Internal APIs definitions
###

  /spend-tx:
    post:
      tags:
        - internal
      operationId: PostSpendTx
      description: 'Create spend transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new spend transaction
          required: true
          schema:
            $ref: '#/definitions/SpendTx'
      responses:
        '200':
          description: successful operation
        '404':
          description: Spend transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracles:
  ## Not implemented yet, returns HTTP 501 response code
    get:
      tags:
        - internal
      operationId: GetActiveRegisteredOracles
      description: 'Get active registered oracles'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Active registered oracles
          schema:
            $ref: '#/definitions/RegisteredOracles'
      security: []
  /oracle-questions:
  ## Not implemented yet, returns HTTP 501 response code
    get:
      tags:
        - internal
      operationId: GetOracleQuestions
      description: 'Get active oracle questions'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: oracle_pub_key
          description: 'Oracle public key'
          required: true
          type : string
      responses:
        '200':
          description: Active oracle questions
          schema:
            $ref: '#/definitions/OracleQuestions'
        '404':
          description: Oracle not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-register-tx:
    post:
      tags:
        - internal
      operationId: PostOracleRegisterTx
      description: 'Create oracle register transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle register transaction
          required: true
          schema:
            $ref: '#/definitions/OracleRegisterTx'
      responses:
        '200':
          description: successful operation
        '404':
          description: Oracle register transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-query-tx:
    post:
      tags:
        - internal
      operationId: PostOracleQueryTx
      description: 'Create oracle query transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle query transaction
          required: true
          schema:
            $ref: '#/definitions/OracleQueryTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OracleInteractionId'
        '404':
          description: Oracle query transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-response-tx:
    post:
      tags:
        - internal
      operationId: PostOracleResponseTx
      description: 'Create oracle response transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle response transaction
          required: true
          schema:
            $ref: '#/definitions/OracleResponseTx'
      responses:
        '200':
          description: successful operation
        '404':
          description: Oracle response transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-subscribe:
  ## Not implemented yet, returns HTTP 501 response code
    post:
      tags:
        - internal
      operationId: PostOracleSubscribe
      description: 'Create oracle interactions subscription'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new subscription for oracle interactions
          required: true
          schema:
            $ref: '#/definitions/OracleSubscribe'
      responses:
        '200':
          description: successful operation
        '404':
          description: Oracle not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /oracle-unsubscribe:
  ## Not implemented yet, returns HTTP 501 response code
    post:
      tags:
        - internal
      operationId: PostOracleUnsubscribe
      description: 'Remove oracle interactions subscriptions'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Unsubscribe from oracle interactions notifications
          required: true
          schema:
            $ref: '#/definitions/OracleSubscribe'
      responses:
        '200':
          description: successful operation
        '404':
          description: Oracle or subscription not found
          schema:
            $ref: '#/definitions/Error'
      security: []
  /account/pub-key:
    get:
      tags:
        - internal
      operationId: GetPubKey
      description: 'Get user''s public key address'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PubKey'
        '404':
          description: No key pair 
          schema:
            $ref: '#/definitions/Error'
      security: []

## CAUTION: debug endpoints, implementation may be inefficient
  /balances:
    get:
      tags:
        - external
      operationId: GetAccountsBalances
      description: 'Get all users'' balances'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsBalances'
        '403':
          description: Balances not enabled
          schema:
            $ref: '#/definitions/Error'
      security: []
  /version:
    get:
      tags:
        - external
      operationId: GetVersion
      description: 'Get node''s version'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Version'
      security: []
  /info:
    get:
      tags:
        - external
      operationId: GetInfo
      description: 'Get node info'
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Info'
        '403':
          description: Info not enabled
          schema:
            $ref: '#/definitions/Error'
      security: []

definitions:
  Block:
    type: object
    properties:
      height:
        type: integer
        format: int64
      prev_hash:
        type: string
      state_hash:
        type: string
      txs_hash:
        type: string
      target:
        type: integer
        format: int64
      nonce:
        type: integer
        format: uint64
      time:
        type: integer
        format: int64
      version:
        type: integer
        format: int64
      pow:
        type: array
        items:
          type: integer
      transactions:
        type: array
        items:
          $ref: '#/definitions/Tx'
  Top:
    type: object
    properties:
      height:
        type: integer
        format: int64
      hash:
        type: string
      prev_hash:
        type: string
      state_hash:
        type: string
      txs_hash:
        type: string
      difficulty:
        type: integer
        format: int64
      nonce:
        type: integer
        format: uint64
      time:
        type: integer
        format: int64
      version:
        type: integer
        format: int64
      pow:
        type: string
  Ping:
    type: object
    properties:
      source:
        type: string
      genesis_hash:
        type: string
      best_hash:
        type: string
      difficulty:
        type: number
      share:
        type: integer
        format: int64
      peers:
        type: array
        items:
          type: string
    required:
    - source
    - genesis_hash
    - best_hash
    - difficulty
  Balance:
    type: object
    properties:
      balance:
        type: integer
        format: int64
  Tx:
    type: object
    properties:
       tx:
         type: string
  Transactions:
    type: array
    items:
      $ref: '#/definitions/Tx'
  RegisteredOracles:
    type: array
    items:
      type: object
      properties:
        address:
          type: string
        query_format:
          type: string
        response_format:
          type: string
        query_fee:
          type: string
        expires_at:
          type: integer
          format: int64
  OracleQuestions:
    type: array
    items:
      type: object
      properties:
        interaction_id:
          type: string
        query:
          type: string
        query_fee:
          type: string
        expires_at:
          type: integer
          format: int64
  OracleSubscribe:
    type: object
    properties:
      oracle_pub_key:
        type: string
  SpendTx:
    type: object
    properties:
      recipient_pubkey:
        type: string
      amount:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
  OracleRegisterTx:
    type: object
    properties:
      query_format:
        type: string
      response_format:
        type: string
      query_fee:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
      ttl:
        "$ref": '#/definitions/TTL'
  OracleQueryTx:
    type: object
    properties:
      oracle_pubkey:
        type: string
      query:
        type: string
      query_fee:
        type: integer
        format: int64
      query_ttl:
        "$ref": '#/definitions/TTL'
      response_ttl:
        "$ref": '#/definitions/RelativeTTL'
      fee:
        type: integer
        format: int64
  OracleResponseTx:
    type: object
    properties:
      interaction_id:
        type: string
      response:
        type: string
      fee:
        type: integer
        format: int64
  TTL:
    type: object
    properties:
      type:
        type: string
        enum: ["delta", "block"]
      value:
        type: integer
        format: int64
  RelativeTTL:
    type: object
    properties:
      type:
        type: string
        enum: ["delta"]
      value:
        type: integer
        format: int64
  OracleInteractionId:
    type: object
    properties:
      interaction_id:
        type: string
  PubKey:
    type: object
    properties:
      pub_key:
        type: string
  AccountsBalances:
    type: object
    properties:
      accounts_balances:
        type: array
        items:
          $ref: '#/definitions/AccountBalance'
  AccountBalance:
    type: object
    properties:
      pub_key:
        type: string
      balance:
        type: integer
        format: int64
  Version:
    type: object
    properties:
      version:
        type: string
      revision:
        type: string
      genesis_hash:
        type: string
  Info:
    type: object
    properties:
      last_30_blocks_time:
        type: array
        items:
          $ref: '#/definitions/BlockTimeSummary'
  BlockTimeSummary:
    type: object
    properties:
      height:
        type: integer
        format: int64
      time:
        type: integer
        format: int64
      time_delta_to_parent:
        type: integer
        format: int64
      difficulty:
        type: number

  Error:
    type: object
    properties:
      reason:
        type: string

externalDocs:
  description: Find out more about Aeternity
  url: 'http://www.aeternity.com'
