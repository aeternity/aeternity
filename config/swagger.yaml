swagger: '2.0'
openapi: '3.0.0'
info:
  description: 'This is the [Aeternity](https://www.aeternity.com/) Epoch API.'
  version: 0.12.0
  title: Aeternity Epoch
  termsOfService: 'https://www.aeternity.com/terms/'
  contact:
    email: apiteam@aeternity.com
basePath: /v2
tags:
  - name: external
    description: External API
  - name: internal
    description: Internal API
  - name: gossip
    description: Gossip protocol API
  - name: name_service
    description: Name resolution API
  - name: chain
    description: Chain state inspection endpoints
  - name: transactions
    description: Transactions inspection endpoints
  - name: node_operator
    description: Node operator endpoints
  - name: dev
    description: Development only API - for validation of client implementations. Should not be used in real life scenrios
  - name: debug
    description: Debug endpoints
  - name: obsolete
    description: Old endpoints that will be removed
schemes:
  - http
paths:

###
## External APIs definitions
###

  /top:
    get:
      tags:
        - external
        - gossip
      operationId: GetTop
      description: 'Get the top block header'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Top'
      security:
  /header-by-hash:
    get:
      tags:
        - external
        - gossip
      operationId: GetHeaderByHash
      description: 'Get a header by hash'
      produces:
        - application/json
      parameters:
        - in: query
          name: hash
          description: 'Hash of the block header to fetch'
          required: true
          type: string
      responses:
        '200':
          description: The header found
          schema:
            $ref: '#/definitions/Header'
        '400':
          description: Invalid hash
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Header not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /header-by-height:
    get:
      tags:
        - external
        - gossip
      operationId: GetHeaderByHeight
      description: 'Get a header by its height in the chain'
      produces:
        - application/json
      parameters:
        - in: query
          name: height
          description: 'Height of the header to fetch'
          required: true
          type: integer
      responses:
        '200':
          description: The header found
          schema:
            $ref: '#/definitions/Header'
        '400':
          description: Header not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block-by-height:
    get:
      tags:
        - external
        - gossip
      operationId: GetBlockByHeightDeprecated
      description: 'Get a block by height'
      produces:
        - application/json
      parameters:
        - in: query
          name: height
          description: 'Height of the block to fetch'
          required: true
          type : integer
      responses:
        '200':
          description: The block being found
          schema:
            $ref: '#/definitions/Block'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block-by-hash:
    get:
      tags:
        - external
        - gossip
      operationId: GetBlockByHashDeprecated
      description: 'Get a block by hash'
      produces:
        - application/json
      parameters:
        - in: query
          name: hash
          description: 'Hash of the block to fetch'
          required: true
          type : string
      responses:
        '200':
          description: The block being found
          schema:
            $ref: '#/definitions/Block'
        '400':
          description: Invalid hash
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block:
    post:
      tags:
        - external
        - gossip
      operationId: PostBlock
      description: 'Post a new block'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Put a new block to node
          required: true
          schema:
            $ref: '#/definitions/Block'
      responses:
        '200':
          description: successful operation
        '400':
          description: Block or header validation error
          schema:
            $ref: '#/definitions/Error'
      security:
  /tx:
    post:
      tags:
        - external
        - gossip
      operationId: PostTx
      description: 'Post a new transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Put a new transaction to node
          required: true
          schema:
            $ref: '#/definitions/Tx'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
      security:
  /tx/{tx_hash}:
    get:
      tags:
        - external
        - transactions
      operationId: GetTx
      description: 'Get a transaction by hash'
      produces:
        - application/json
      parameters:
        - in: path
          name: tx_hash
          description: Hash of the transaction to get
          required: true
          type: string
        - in: query
          name: tx_encoding
          description: 'Transaction encoding'
          type: string
          enum: [message_pack, json]
          default: message_pack
      responses:
        '200':
          description: The transaction found
          schema:
            $ref: '#/definitions/SingleTxObject'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Transaction not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /tx/contract/create:
    post:
      tags:
        - external
        - dev
      operationId: PostContractCreate
      description: 'Get a contract_create transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ContractCreateData'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/CreateContractUnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Owner account not found
          schema:
            $ref: '#/definitions/Error'
  /tx/contract/call:
    post:
      tags:
        - external
        - dev
      operationId: PostContractCall
      description: 'Get a contract_call transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ContractCallData'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Caller account or contract not found
          schema:
            $ref: '#/definitions/Error'
  /tx/contract/call/compute:
    post:
      tags:
        - external
        - dev
      operationId: PostContractCallCompute
      description: 'Compute the call_data for SOPHIA and get contract_call transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ContractCallCompute'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Caller account or contract not found
          schema:
            $ref: '#/definitions/Error'
  /tx/oracle/register:
    post:
      tags:
        - external
        - dev
      operationId: PostOracleRegister
      description: 'Get a oracle_register transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OracleRegisterTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/Error'
  /tx/oracle/extend:
    post:
      tags:
        - external
        - dev
      operationId: PostOracleExtend
      description: 'Get an oracle_extend transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OracleExtendTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/Error'
  /tx/oracle/query:
    post:
      tags:
        - external
        - dev
      operationId: PostOracleQuery
      description: 'Get a oracle_query transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OracleQueryTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account or oracle not found
          schema:
            $ref: '#/definitions/Error'
  /tx/oracle/response:
    post:
      tags:
        - external
        - dev
      operationId: PostOracleResponse
      description: 'Get a oracle_response transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OracleResponseTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Oracle or query not found
          schema:
            $ref: '#/definitions/Error'
  /tx/name/preclaim:
    post:
      tags:
        - external
        - dev
      operationId: PostNamePreclaim
      description: 'Get a name_preclaim transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NamePreclaimTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/Error'
  /tx/name/claim:
    post:
      tags:
        - external
        - dev
      operationId: PostNameClaim
      description: 'Get a name_claim transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NameClaimTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account or name not found
          schema:
            $ref: '#/definitions/Error'
  /tx/name/update:
    post:
      tags:
        - external
        - dev
      operationId: PostNameUpdate
      description: 'Get a name_update transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NameUpdateTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account or oracle not found
          schema:
            $ref: '#/definitions/Error'
  /tx/name/transfer:
    post:
      tags:
        - external
        - dev
      operationId: PostNameTransfer
      description: 'Get a name_transfer transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NameTransferTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account or name not found
          schema:
            $ref: '#/definitions/Error'
  /tx/name/revoke:
    post:
      tags:
        - external
        - dev
      operationId: PostNameRevoke
      description: 'Get a name_revoke transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NameRevokeTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account or name not found
          schema:
            $ref: '#/definitions/Error'
  /tx/spend:
    post:
      tags:
        - external
        - dev
      operationId: PostSpend
      description: 'Get a spend transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SpendTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Sender account not found
          schema:
            $ref: '#/definitions/Error'
  /tx/channel/create:
    post:
      tags:
        - external
        - dev 
      operationId: PostChannelCreate
      description: 'Get a channel_create transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChannelCreateTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Initiator not found 
          schema:
            $ref: '#/definitions/Error'
  /tx/channel/deposit:
    post:
      tags:
        - external
        - dev
      operationId: PostChannelDeposit
      description: 'Get a channel_deposit transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChannelDepositTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
  /tx/channel/withdrawal:
    post:
      tags:
        - external
        - dev
      operationId: PostChannelWithdrawal
      description: 'Get a channel_withdrawal transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChannelWithdrawalTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
  /tx/channel/close/mutual:
    post:
      tags:
        - external
        - dev
      operationId: PostChannelCloseMutual
      description: 'Get a channel_close_mutual transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChannelCloseMutualTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
  /tx/channel/close/solo:
    post:
      tags:
        - external
        - dev
      operationId: PostChannelCloseSolo
      description: 'Get a channel_close_solo transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChannelCloseSoloTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
  /tx/channel/slash:
    post:
      tags:
        - external
        - dev
      operationId: PostChannelSlash
      description: 'Get a channel_slash transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChannelSlashTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'
  /tx/channel/settle:
    post:
      tags:
        - external
        - dev
      operationId: PostChannelSettle
      description: 'Get a channel_settle transaction'
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChannelSettleTx'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UnsignedTx'
        '400':
          description: Invalid transaction
          schema:
            $ref: '#/definitions/Error'

  /transactions:
    get:
      tags:
        - external
        - transactions
      operationId: GetTxs
      description: 'Get transactions in the mempool'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Transactions'
  /commitment-hash:
    get:
      tags:
        - external
        - dev
      operationId: GetCommitmentHash
      description: 'Compute commitment hash for a given salt and name. Commitment hash must be computed client side. This endpoint is for verifying client''s implementations.'
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          description: 'Name to put into the hash'
          required: true
          type: string
        - in: query
          name: salt
          description: 'Salt to put into the hash'
          required: true
          type: integer
      responses:
        '200':
          description: Calculated commitment hash
          schema:
            $ref: '#/definitions/NameCommitmentHash'
        '400':
          description: Name validation failed
          schema:
            $ref: '#/definitions/Error'
      security:
  /name:
    get:
      tags:
        - external
        - name_service
      operationId: GetName
      description: 'Get name entry from Naming System'
      produces:
        - application/json
      parameters:
        - in: query
          name: name
          description: 'Name to get entry from Naming System'
          required: true
          type : string
      responses:
        '200':
          description: Name data
          schema:
            $ref: '#/definitions/NameEntry'
        '400':
          description: Name validation failed
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Name not found
          schema:
            $ref: '#/definitions/Error'
      security:

###
## Internal APIs definitions
###

  /spend-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostSpendTx
      description: 'Create spend transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new spend transaction
          required: true
          schema:
            $ref: '#/definitions/SpendTx'
      responses:
        '200':
          description: successful operation
        '404':
          description: Spend transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security:
  /oracles:
    get:
      tags:
        - internal
        - obsolete
      operationId: GetActiveRegisteredOracles
      description: 'Get active registered oracles'
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          description: 'Last oracle in previous page'
          required: false
          type: string
        - in: query
          name: max
          description: 'Max number of active oracles received'
          required: false
          type: integer
          minimum: 1
          maximum: 1000
      responses:
        '200':
          description: Active registered oracles
          schema:
            $ref: '#/definitions/RegisteredOracles'
      security:
  /oracle-questions:
    get:
      tags:
        - internal
        - obsolete
      operationId: GetOracleQuestions
      description: 'Get active oracle questions'
      produces:
        - application/json
      parameters:
        - in: query
          name: oracle_pub_key
          description: 'Oracle public key'
          required: true
          type : string
        - in: query
          name: from
          description: 'Last query id in previous page'
          required: false
          type: string
        - in: query
          name: max
          description: 'Max number of oracle queries received'
          required: false
          type: integer
          minimum: 1
          maximum: 1000
      responses:
        '200':
          description: Active oracle questions
          schema:
            $ref: '#/definitions/OracleQuestions'
        '400':
          description: Invalid parameters
          schema:
            $ref: '#/definitions/Error'
      security:
  /oracle-register-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostOracleRegisterTx
      description: 'Create oracle register transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle register transaction
          required: true
          schema:
            $ref: '#/definitions/OracleRegisterTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OracleRegisterResponse'
        '404':
          description: Oracle register transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security:
  /oracle-extend-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostOracleExtendTx
      description: 'Create oracle extend transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle extend transaction
          required: true
          schema:
            $ref: '#/definitions/OracleExtendTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OracleRegisterResponse'
        '404':
          description: Oracle register transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security:
  /oracle-query-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostOracleQueryTx
      description: 'Create oracle query transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle query transaction
          required: true
          schema:
            $ref: '#/definitions/OracleQueryTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OracleQueryResponse'
        '404':
          description: Oracle query transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security:
  /oracle-response-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostOracleResponseTx
      description: 'Create oracle response transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new oracle response transaction
          required: true
          schema:
            $ref: '#/definitions/OracleResponseTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OracleQueryResponse'
        '404':
          description: Oracle response transaction validation error
          schema:
            $ref: '#/definitions/Error'
      security:
  /name-preclaim-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostNamePreclaimTx
      description: 'Create name preclaim transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new name preclaim transaction
          required: true
          schema:
            $ref: '#/definitions/NamePreclaimTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NameCommitmentHash'
        '400':
          description: Name preclaim transaction validation error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found error
          schema:
            $ref: '#/definitions/Error'
      security:
  /name-claim-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostNameClaimTx
      description: 'Create name claim transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new name claim transaction
          required: true
          schema:
            $ref: '#/definitions/NameClaimTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NameHash'
        '400':
          description: Name claim transaction validation error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found error
          schema:
            $ref: '#/definitions/Error'
      security:
  /name-update-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostNameUpdateTx
      description: 'Create name update transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new name update transaction
          required: true
          schema:
            $ref: '#/definitions/NameUpdateTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NameHash'
        '400':
          description: Name update transaction validation error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found error
          schema:
            $ref: '#/definitions/Error'
      security:
  /name-transfer-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostNameTransferTx
      description: 'Create name transfer transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new name transfer transaction
          required: true
          schema:
            $ref: '#/definitions/NameTransferTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NameHash'
        '400':
          description: Name transfer transaction validation error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found error
          schema:
            $ref: '#/definitions/Error'
      security:
  /name-revoke-tx:
    post:
      tags:
        - internal
        - obsolete
      operationId: PostNameRevokeTx
      description: 'Create name revoke transaction'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Creates new name revoke transaction
          required: true
          schema:
            $ref: '#/definitions/NameRevokeTx'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NameHash'
        '400':
          description: Name revoke transaction validation error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found error
          schema:
            $ref: '#/definitions/Error'
      security:
  /account/pub-key:
    get:
      tags:
        - internal
        - node_operator
      operationId: GetPubKey
      description: 'Get user''s public key address'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PubKey'
        '404':
          description: No key pair
          schema:
            $ref: '#/definitions/Error'
      security:
  /account/balance/{account_pubkey}:
    get:
      tags:
        - external
        - chain
      operationId: GetAccountBalance
      description: 'Get accounts''s balance'
      produces:
        - application/json
      parameters:
        - in: path
          name: account_pubkey
          description: 'Account pubkey to show balance for'
          required: true
          type: string
        - in: query
          name: height
          description: 'Height of the block to show balance at'
          required: false
          type: integer
        - in: query
          name: hash
          description: 'Hash of the block to show balance at'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Balance'
        '400':
          description: Invalid block hash or hash and height combination
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block or account not found
          schema:
            $ref: '#/definitions/Error'
  /account/txs/{account_pubkey}:
    get:
      tags:
        - external
        - transactions
      operationId: GetAccountTransactions
      description: 'Get accounts''s transactions included in blocks in the longest chain'
      produces:
        - application/json
      parameters:
        - in: path
          name: account_pubkey
          description: 'Account pubkey to show transactions for'
          required: true
          type: string
        - in: query
          name: limit
          description: 'Maximum transactions count to show'
          required: false
          type: integer
          default: 20
          maximum: 100
          minimum: 1
        - in: query
          name: offset
          description: 'Offset to start transaction list from'
          required: false
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: message_pack
        - in: query
          name: pending
          description: 'Include currently pending transactions'
          type: boolean
          default: true
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/TxObjects'
        '400':
          description: Invalid account hash
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Account not found
          schema:
            $ref: '#/definitions/Error'

## CAUTION: debug endpoints, implementation may be inefficient
  /balances:
    get:
      tags:
        - external
        - debug
      operationId: GetAccountsBalances
      description: 'Get all users'' balances'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AccountsBalances'
        '403':
          description: Balances not enabled
          schema:
            $ref: '#/definitions/Error'
      security:
  /version:
    get:
      tags:
        - external
        - debug
      operationId: GetVersion
      description: 'Get node''s version'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Version'
      security:
  /info:
    get:
      tags:
        - external
        - debug
      operationId: GetInfo
      description: 'Get node info'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Info'
        '403':
          description: Info not enabled
          schema:
            $ref: '#/definitions/Error'
      security:
  /debug/peers:
    get:
      tags:
        - internal
        - debug
      operationId: GetPeers
      description: 'Get node Peers'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Peers'
        '403':
          description: Info not enabled
          schema:
            $ref: '#/definitions/Error'
      security:

  /block/number:
    get:
      tags:
        - internal
        - chain
      operationId: GetBlockNumber
      description: 'Get the current block''s height'
      produces:
        - application/json
      parameters:
      responses:
        '200':
          description: The current block's height
          schema:
            $ref: '#/definitions/BlockHeight'
      security:
  /block/height/{height}:
    get:
      tags:
        - external
        - chain
      operationId: GetBlockByHeight
      description: 'Get a block by height'
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: 'Height of the block to fetch'
          required: true
          type : integer
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: json
      responses:
        '200':
          description: The block being found
          schema:
            $ref: '#/definitions/GenericBlock'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/hash/{hash}:
    get:
      tags:
        - external
        - chain
      operationId: GetBlockByHash
      description: 'Get a block by hash'
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: 'Hash of the block to fetch'
          required: true
          type : string
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: json
      responses:
        '200':
          description: The block being found
          schema:
            $ref: '#/definitions/GenericBlock'
        '400':
          description: Invalid hash
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/genesis:
    get:
      tags:
        - external
        - chain
      operationId: GetBlockGenesis
      description: 'Get the genesis block'
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: json
      responses:
        '200':
          description: The genesis block
          schema:
            $ref: '#/definitions/GenericBlock'
      security:
  /block/latest:
    get:
      tags:
        - external
        - chain
      operationId: GetBlockLatest
      description: 'Get the top block'
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: json
      responses:
        '200':
          description: The top block
          schema:
            $ref: '#/definitions/GenericBlock'
      security:
  /block/pending:
    get:
      tags:
        - external
        - chain
      operationId: GetBlockPending
      description: 'Get the block being mined'
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: json
      responses:
        '200':
          description: The pending block with invalid nonce and pow evidence
          schema:
            $ref: '#/definitions/GenericBlock'
        '404':
          description: No pending block (node not mining)
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/txs/count/hash/{hash}:
    get:
      tags:
        - internal
        - chain
      operationId: GetBlockTxsCountByHash
      description: 'Get a block transactions count by hash'
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: 'Hash of the block to fetch'
          required: true
          type : string
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
      responses:
        '200':
          description: The count of transactions in the block
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
        '400':
          description: Invalid hash
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/txs/count/height/{height}:
    get:
      tags:
        - internal
        - chain
      operationId: GetBlockTxsCountByHeight
      description: 'Get a block transactions count by height'
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: 'Height of the block to fetch'
          required: true
          type : integer
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
      responses:
        '200':
          description: The count of transactions in the block
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
        '404':
          description: Block not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/txs/count/genesis:
    get:
      tags:
        - internal
        - chain
      operationId: GetGenesisBlockTxsCount
      description: 'Get the genesis block transactions count'
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
      responses:
        '200':
          description: The count of transactions in the genesis block
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
      security:
  /block/txs/count/latest:
    get:
      tags:
        - internal
        - chain
      operationId: GetLatestBlockTxsCount
      description: 'Get the latest block transactions count'
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
      responses:
        '200':
          description: The count of transactions in the latest block
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
      security:
  /block/txs/count/pending:
    get:
      tags:
        - internal
        - chain
      operationId: GetPendingBlockTxsCount
      description: 'Get the pending block transactions count'
      produces:
        - application/json
      parameters:
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
      responses:
        '200':
          description: The count of transactions in the pending block
          schema:
            type: object
            properties:
              count:
                type: integer
                description: Count
        '404':
          description: Pending block not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/tx/height/{height}/{tx_index}:
    get:
      tags:
        - internal
        - chain
      operationId: GetTransactionFromBlockHeight
      description: 'Get a transaction by index in the block by height'
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: 'Height of the block to search for'
          required: true
          type: integer
        - in: path
          name: tx_index
          description: 'Index of the transaction in the block'
          required: true
          type: integer
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: message_pack
      responses:
        '200':
          description: The transaction found
          schema:
            $ref: '#/definitions/SingleTxObject'
        '404':
          description: Block or transaction not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/txs/list/height:
    get:
      tags:
        - internal
        - chain
      operationId: GetTxsListFromBlockRangeByHeight
      description: 'Get transactions list from a block range by height'
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          description: 'Height of the block to start the range'
          required: true
          type : integer
          minimum: 0
        - in: query
          name: to
          description: 'Height of the block to end the range'
          required: true
          type : integer
          minimum: 0
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: message_pack
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
      responses:
        '200':
          description: The list of transactions in block range
          schema:
            $ref: '#/definitions/TxObjects'
        '400':
          description: Invalid range
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Range not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/tx/hash/{hash}/{tx_index}:
    get:
      tags:
        - internal
        - chain
      operationId: GetTransactionFromBlockHash
      description: 'Get a transaction by index in the block by hash'
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: 'Hash of the block to search for'
          required: true
          type: string
        - in: path
          name: tx_index
          description: 'Index of the transaction in the block'
          required: true
          type: integer
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: message_pack
      responses:
        '200':
          description: The transaction found
          schema:
            $ref: '#/definitions/SingleTxObject'
        '404':
          description: Block or transaction not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/tx/latest/{tx_index}:
    get:
      tags:
        - internal
        - chain
      operationId: GetTransactionFromBlockLatest
      description: 'Get a transaction by index in the latest block'
      produces:
        - application/json
      parameters:
        - in: path
          name: tx_index
          description: 'Index of the transaction in the block'
          required: true
          type: integer
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: message_pack
      responses:
        '200':
          description: The transaction found
          schema:
            $ref: '#/definitions/SingleTxObject'
        '404':
          description: Block or transaction not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /block/txs/list/hash:
    get:
      tags:
        - internal
        - chain
      operationId: GetTxsListFromBlockRangeByHash
      description: 'Get transactions list from a block range by hash'
      produces:
        - application/json
      parameters:
        - in: query
          name: from
          description: 'Hash of the block to start the range'
          required: true
          type : string
          minimum: 0
        - in: query
          name: to
          description: 'Hash of the block to end the range'
          required: true
          type : string
          minimum: 0
        - in: query
          name: tx_encoding
          description: 'Transactions encoding'
          type: string
          enum: [message_pack, json]
          default: message_pack
        - in: query
          name: tx_types
          description: 'Transactions types to show. Comma separated'
          required: false
          type : string
        - in: query
          name: exclude_tx_types
          description: 'Transactions types not to show. Comma separated. If a tx type appears in both tx_types and exclude_tx_types, it is excluded.'
          required: false
          type : string
      responses:
        '200':
          description: The list of transactions in block range
          schema:
            $ref: '#/definitions/TxObjects'
        '400':
          description: Invalid range
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Range not found
          schema:
            $ref: '#/definitions/Error'
      security:
  /contract/compile:
    post:
      tags:
        - external
        - dev
      operationId: 'CompileContract'
      description: 'Compile a sophia contract from source and return byte code'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: contract code
          required: true
          schema:
            $ref: '#/definitions/Contract'
      responses:
        '200':
          description: Byte code response
          schema:
            $ref: '#/definitions/ByteCode'
        '403':
          description: Invalid contract
          schema:
            $ref: '#/definitions/Error'
  /contract/call:
    post:
      tags:
        - external
        - dev
      operationId: 'CallContract'
      description: 'Call a sophia function with a given name and argument in the given bytecode off chain.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: contract call
          required: true
          schema:
            $ref: '#/definitions/ContractCallInput'
      responses:
        '200':
          description: Resulting state map
          schema:
            $ref: '#/definitions/CallResult'
        '403':
          description: Invalid contract
          schema:
            $ref: '#/definitions/Error'
  /contract/encode-calldata:
    post:
      tags:
        - external
        - dev
      operationId: 'EncodeCalldata'
      description: 'Encode sophia data and function name according to sophia ABI.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Arguments in sophia
          required: true
          schema:
            $ref: '#/definitions/ContractCallInput'
      responses:
        '200':
          description: Binary ecoded calldata
          schema:
            $ref: '#/definitions/Calldata'
        '403':
          description: Invalid contract
          schema:
            $ref: '#/definitions/Error'
  /peer/key:
    get:
      tags:
        - external
        - gossip
      operationId: 'GetPeerKey'
      description: 'Get node''s public peer key'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 'Node''s peer public key'
          schema:
            type: object
            properties:
              pubkey:
                $ref: '#/definitions/EncodedHash'
        '404':
          description: No key pair
          schema:
            $ref: '#/definitions/Error'

definitions:
  EncodedHash:
    type: string
  Pow:
    type: array
    items:
      type: integer
      format: int32
    minItems: 42
    maxItems: 42
  Uri:
    type: string
    ## format: uri
  Header:
    type: object
    properties:
      height:
        type: integer
        format: int64
      prev_hash:
        $ref: '#/definitions/EncodedHash'
      state_hash:
        $ref: '#/definitions/EncodedHash'
      txs_hash:
        $ref: '#/definitions/EncodedHash'
      target:
        type: integer
        format: int64
      nonce:
        type: integer
        format: uint64
      time:
        type: integer
        format: int64
      version:
        type: integer
      pow:
        $ref: '#/definitions/Pow'
  Block:
    allOf:
      - $ref: '#/definitions/Header'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Tx'
  GenericBlock:
    allOf:
      - $ref: '#/definitions/Header'
      - type: object
        discriminator: data_schema
        properties:
          data_schema:
            type: string
          hash:
            $ref: '#/definitions/EncodedHash'
        required:
        - data_schema
  BlockWithJSONTxs:
    allOf:
      - $ref: '#/definitions/GenericBlock'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/SignedTxJSON'
  BlockWithMsgPackTxs:
    allOf:
      - $ref: '#/definitions/GenericBlock'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Tx'
  Top:
    allOf:
      - $ref: '#/definitions/Header'
      - type: object
        properties:
          hash:
            type: string
  TxObjects:
    type: object
    discriminator: data_schema
    properties:
      data_schema:
        type: string
    required:
    - data_schema
  MsgPackTxs:
    allOf:
      - $ref: '#/definitions/TxObjects'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/Tx'
  JSONTxs:
    allOf:
      - $ref: '#/definitions/TxObjects'
      - type: object
        properties:
          transactions:
            type: array
            items:
              $ref: '#/definitions/SignedTxJSON'
  Balance:
    type: object
    properties:
      balance:
        type: integer
        format: int64
  Tx:
    type: object
    properties:
       tx:
         type: string
  Transactions:
    type: array
    items:
      $ref: '#/definitions/Tx'
  RegisteredOracles:
    type: array
    items:
      type: object
      properties:
        address:
          type: string
        query_format:
          type: string
        response_format:
          type: string
        query_fee:
          type: integer
        expires_at:
          type: integer
          format: int64
  OracleQuestions:
    type: array
    items:
      type: object
      properties:
        query_id:
          type: string
        query:
          type: string
        query_fee:
          type: integer
        expires_at:
          type: integer
          format: int64
  SpendTx:
    type: object
    properties:
      recipient_pubkey:
        $ref: '#/definitions/EncodedHash'
      amount:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
      sender:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
      payload:
        type: string
    required:
    - recipient_pubkey
    - amount
    - fee
    - payload
  OracleRegisterTx:
    type: object
    properties:
      query_format:
        type: string
      response_format:
        type: string
      query_fee:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
      ttl:
        $ref: '#/definitions/TTL'
      account:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
    required:
    - query_format
    - response_format
    - query_fee
    - fee
    - ttl
  OracleRegisterResponse:
    type: object
    properties:
      tx_hash:
        $ref: '#/definitions/EncodedHash'
      oracle_id:
        $ref: '#/definitions/EncodedHash'
  OracleExtendTx:
    type: object
    properties:
      fee:
        type: integer
        format: int64
      ttl:
        $ref: '#/definitions/TTL'
      oracle:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
    required:
    - fee
    - ttl
  OracleQueryTx:
    type: object
    properties:
      oracle_pubkey:
        type: string
      query:
        type: string
      query_fee:
        type: integer
        format: int64
      query_ttl:
        $ref: '#/definitions/TTL'
      response_ttl:
        $ref: '#/definitions/RelativeTTL'
      fee:
        type: integer
        format: int64
      sender:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
        description: Sender nonce
    required:
    - oracle_pubkey
    - query
    - query_fee
    - query_ttl
    - response_ttl
    - fee
  OracleResponseTx:
    type: object
    properties:
      query_id:
        $ref: '#/definitions/EncodedHash'
      response:
        type: string
      fee:
        type: integer
        format: int64
      oracle:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
        description: Oracle nonce
    required:
    - query_id
    - response
    - fee
  OracleQueryResponse:
    type: object
    properties:
      tx_hash:
        $ref: '#/definitions/EncodedHash'
      query_id:
        $ref: '#/definitions/EncodedHash'
  TTL:
    type: object
    properties:
      type:
        type: string
        enum: ["delta", "block"]
      value:
        type: integer
        format: int64
        minimum: 1
  RelativeTTL:
    type: object
    properties:
      type:
        type: string
        enum: ["delta"]
      value:
        type: integer
        format: int64
        minimum: 1
  NameEntry:
    type: object
    properties:
      name:
        type: string
      name_hash:
        type: string
      name_ttl:
        type: integer
        format: int64
      pointers:
        type: string
  NamePreclaimTx:
    type: object
    properties:
      commitment:
        type: string
      fee:
        type: integer
        format: int64
      account:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
    required:
    - commitment
    - fee
  NameClaimTx:
    type: object
    properties:
      name:
        type: string
      name_salt:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
      account:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
    required:
    - name
    - name_salt
    - fee
  NameUpdateTx:
    type: object
    properties:
      name_hash:
        type: string
      name_ttl:
        type: integer
        format: int64
      pointers:
        type: string
      ttl:
        type: integer
        format: int64
      fee:
        type: integer
        format: int64
      account:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
    required:
    - name_hash
    - name_ttl
    - pointers
    - ttl
    - fee
  NameTransferTx:
    type: object
    properties:
      name_hash:
        type: string
      recipient_pubkey:
        type: string
      fee:
        type: integer
        format: int64
      account:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
    required:
    - name_hash
    - recipient_pubkey
    - fee
  NameRevokeTx:
    type: object
    properties:
      name_hash:
        type: string
      fee:
        type: integer
        format: int64
      account:
        $ref: '#/definitions/EncodedHash'
      nonce:
        type: integer
        format: int64
    required:
    - name_hash
    - fee
  NameCommitmentHash:
    type: object
    properties:
      commitment:
        type: string
  NameHash:
    type: object
    properties:
      name_hash:
        type: string
  ChannelCreateTx:
    type: object
    properties:
      initiator:
        $ref: '#/definitions/EncodedHash'
      initiator_amount:
        type: integer
        format: int64
        minimum: 0
      responder:
        $ref: '#/definitions/EncodedHash'
      responder_amount:
        type: integer
        format: int64
        minimum: 0
      push_amount:
        type: integer
        format: int64
        minimum: 0
      channel_reserve:
        type: integer
        format: int64
        minimum: 0
      lock_period:
        type: integer
        format: int64
        minimum: 0
      ttl:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
    required:
    - initiator
    - initiator_amount
    - responder
    - responder_amount
    - push_amount
    - channel_reserve
    - lock_period
    - ttl 
    - fee
  ChannelDepositTx:
    type: object
    properties:
      channel_id:
        type: string
      from:
        $ref: '#/definitions/EncodedHash'
      amount:
        type: integer
        format: int64
        minimum: 0
      ttl:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
    required:
    - channel_id
    - from
    - amount
    - ttl
    - fee
    - nonce
  ChannelWithdrawalTx:
    type: object
    properties:
      channel_id:
        type: string
      to:
        $ref: '#/definitions/EncodedHash'
      amount:
        type: integer
        format: int64
        minimum: 0
      ttl:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
    required:
    - channel_id
    - to
    - amount
    - ttl
    - fee
    - nonce
  ChannelCloseMutualTx:
    type: object
    properties:
      channel_id:
        type: string
      from:
        $ref: '#/definitions/EncodedHash'
      initiator_amount:
        type: integer
        format: int64
        minimum: 0
      responder_amount:
        type: integer
        format: int64
        minimum: 0
      ttl:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
    required:
    - channel_id
    - from
    - initiator_amount
    - responder_amount
    - ttl
    - fee
    - nonce
  ChannelCloseSoloTx:
    type: object
    properties:
      channel_id:
        type: string
      from:
        $ref: '#/definitions/EncodedHash'
      payload:
        type: string
      ttl:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
    required:
    - channel_id
    - from
    - payload
    - ttl
    - fee
  ChannelSlashTx:
    type: object
    properties:
      channel_id:
        type: string
      from:
        $ref: '#/definitions/EncodedHash'
      payload:
        type: string
      ttl:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
    required:
    - channel_id
    - from
    - payload
    - ttl
    - fee
  ChannelSettleTx:
    type: object
    properties:
      channel_id:
        type: string
      from:
        $ref: '#/definitions/EncodedHash'
      initiator_amount:
        type: integer
        format: int64
        minimum: 0
      responder_amount:
        type: integer
        format: int64
        minimum: 0
      ttl:
        type: integer
        format: int64
        minimum: 0
      fee:
        type: integer
        format: int64
        minimum: 0
      nonce:
        type: integer
        format: int64
        minimum: 0
    required:
    - channel_id
    - from
    - initiator_amount
    - participant_amount
    - ttl
    - fee
    - nonce
  PubKey:
    type: object
    properties:
      pub_key:
        type: string
  AccountsBalances:
    type: object
    properties:
      accounts_balances:
        type: array
        items:
          $ref: '#/definitions/AccountBalance'
  AccountBalance:
    type: object
    properties:
      pub_key:
        type: string
      balance:
        type: integer
        format: int64
  Version:
    type: object
    properties:
      version:
        type: string
      revision:
        type: string
      genesis_hash:
        type: string
  Info:
    type: object
    properties:
      last_30_blocks_time:
        type: array
        items:
          $ref: '#/definitions/BlockTimeSummary'
  BlockTimeSummary:
    type: object
    properties:
      height:
        type: integer
        format: int64
      time:
        type: integer
        format: int64
      time_delta_to_parent:
        type: integer
        format: int64
      difficulty:
        type: number
  BlockHeight:
    type: object
    properties:
      height:
        type: integer
        format: int64
        description: Blocks's height
    required:
    - height

  SingleTxObject:
    type: object
    discriminator: data_schema
    properties:
      data_schema:
        type: string
    required:
    - data_schema
  SingleTxJSON:
    allOf:
    - $ref: '#/definitions/SingleTxObject'
    - type: object
      properties:
        transaction:
          $ref: '#/definitions/SignedTxJSON'
      required:
      - transaction
  SingleTxMsgPack:
    allOf:
    - $ref: '#/definitions/SingleTxObject'
    - type: object
      properties:
        transaction:
          $ref: '#/definitions/Tx'
      required:
      - transaction
  SignedTxJSON:
    type: object
    properties:
      tx:
        $ref: '#/definitions/JSONTx'
      block_height:
        type: integer
      block_hash:
        $ref: '#/definitions/EncodedHash'
      hash:
        $ref: '#/definitions/EncodedHash'
      signatures:
        type: array
        minItems: 1
        items:
          type: string
  ChannelCreateTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelCreateTx'
  ChannelDepositTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelDepositTx'
  ChannelWithdrawalTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelWithdrawalTx'
  ChannelCloseMutualTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelCloseMutualTx'
  ChannelCloseSoloTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelCloseSoloTx'
  ChannelSlashTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelSlashTx'
  ChannelSlashTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelSlashTx'
  ChannelSettleTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ChannelSettleTx'
## readable JSON objects for transactions:
  JSONTx:
    type: object
    discriminator: data_schema
    properties:
      data_schema:
        type: string
      vsn:
        type: integer
    required:
    - data_schema
  CoinbaseTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - type: object
        properties:
          account:
            $ref: '#/definitions/EncodedHash'
          height:
            type: integer
            format: int64
          reward:
            type: integer
            format: int64
        required:
        - account
        - height
        - reward
  SpendTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/SpendTx'
  OracleRegisterTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/OracleRegisterTx'
  OracleExtendTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/OracleExtendTx'
  OracleQueryTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/OracleQueryTx'
  OracleResponseTxJSON:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/OracleResponseTx'
  NamePreclaimTxObject:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/NamePreclaimTx'
  NameClaimTxObject:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/NameClaimTx'
  NameUpdateTxObject:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/NameUpdateTx'
  NameTransferTxObject:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/NameTransferTx'
  NameRevokeTxObject:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/NameRevokeTx'
  ContractCreateTxObject:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ContractCreateData'
  ContractCallTxObject:
    allOf:
      - $ref: '#/definitions/JSONTx'
      - $ref: '#/definitions/ContractCallData'
  Error:
    type: object
    properties:
      reason:
        type: string
  Contract:
    type: object
    properties:
      code:
        type: string
      options:
        type: string
  ByteCode:
    type: object
    properties:
      bytecode:
        type: string
  ContractCallInput:
    type: object
    properties:
      abi:
        type: string
      code:
        type: string
      function:
        type: string
      arg:
       type: string
  CallResult:
    type: object
    properties:
      out:
        type: string
  Calldata:
    type: object
    properties:
      calldata:
        type: string
  Peer:
    type: string
    description: 'Aeternity node'
  Peers:
    type: object
    properties:
      peers:
        type: array
        description: All discovered peers
        items:
            $ref: '#/definitions/Peer'
      blocked:
        type: array
        description: All blocked peers
        items:
            $ref: '#/definitions/Peer'
  ContractCreateData:
    type: object
    properties:
      owner:
        type: string
        description: Contract owner pub_key
      nonce:
        description: Owner's nonce
        type: integer
      code:
        description: 'Contract''s code'
        type: string
      vm_version:
        description: 'Virtual machine''s version'
        type: integer
        minimum: 0
        maximum: 255
      deposit:
        description: Deposit
        type: integer
        minimum: 0
      amount:
        description: Amount
        type: integer
        minimum: 0
      gas:
        description: Contract gas
        type: integer
        minimum: 0
      gas_price:
        description: Gas price
        type: integer
        minimum: 0
      fee:
        description: Transaction fee
        type: integer
        minimum: 0
      call_data:
        description: Contract call data
        type: string
    required:
    - owner
    - code
    - vm_version
    - deposit
    - amount
    - gas
    - gas_price
    - fee
    - call_data
  ContractCallData:
    type: object
    properties:
      caller:
        description: Contract caller pub_key
        type: string
      nonce:
        description: Caller's nonce
        type: integer
      contract:
        description: 'Contract''s pub_key'
        type: string
      vm_version:
        description: 'Virtual machine''s version'
        type: integer
        minimum: 0
        maximum: 255
      fee:
        description: Transaction fee
        type: integer
        minimum: 0
      amount:
        description: Amount
        type: integer
        minimum: 0
      gas:
        description: Contract gas
        type: integer
        minimum: 0
      gas_price:
        description: Gas price
        type: integer
        minimum: 0
      call_data:
        description: Contract call data
        type: string
    required:
    - caller
    - contract
    - vm_version
    - fee
    - amount
    - gas
    - gas_price
    - call_data
  ContractCallCompute:
    type: object
    properties:
      caller:
        description: Contract caller pub_key
        type: string
      nonce:
        description: Caller's nonce
        type: integer
      contract:
        description: 'Contract''s pub_key'
        type: string
      vm_version:
        description: 'Virtual machine''s version'
        type: integer
        minimum: 0
        maximum: 255
      fee:
        description: Transaction fee
        type: integer
        minimum: 0
      amount:
        description: Amount
        type: integer
        minimum: 0
      gas:
        description: Contract gas
        type: integer
        minimum: 0
      gas_price:
        description: Gas price
        type: integer
        minimum: 0
      function:
        description: Contract call data function
        type: string
      arguments:
        description: Contract call data function arguments
        type: string
    required:
    - caller
    - contract
    - vm_version
    - fee
    - amount
    - gas
    - gas_price
    - function
    - arguments
  UnsignedTx:
    type: object
    properties:
      tx:
        description: Unsigned transaction object
        $ref: '#/definitions/EncodedHash'
      tx_hash:
        description: Transaction's hash
        $ref: '#/definitions/EncodedHash'
    required:
    - tx
    - tx_hash
  CreateContractUnsignedTx:
    allOf:
      - $ref: '#/definitions/UnsignedTx'
      - type: object
        properties:
          contract_address:
            description: Address of the contract to be created
            type: string
        required:
        - contract_address

externalDocs:
  description: Find out more about Aeternity
  url: 'http://www.aeternity.com'
