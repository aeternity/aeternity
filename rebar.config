%% The requirements on the OTP version come mainly from the patches
%% for OTP modules - see `otp_patches/` - requiring the version of
%% certain OTP applications, e.g. `mnesia`, to be well known in order
%% for such patches to be applied deterministically.
%%
%% The expected patched OTP modules required for the OTP release are
%% copied explicitly one by one as part of the `relx` overlay
%% configuration (in this `rebar.config`), in order to prevent
%% silently skipping patches e.g. because not built.
%%
%% If the user has a version of OTP that satisfies the specified
%% required minimum OTP version and that includes OTP applications
%% with version different (e.g. greater) than the well known ones
%% (e.g. because of a new OTP version with a higher-versioned OTP
%% application e.g. `mnesia`), then the patched OTP modules are not
%% built (!) though the explicit copying in the `relx` overlay fails.
%% Addressing such a failure consists of updating the content of
%% `otp_patches/`.
{minimum_otp_vsn, "20.1"}.

{project_app_dirs, ["apps/*"]}.

{erl_opts, [debug_info, {parse_transform, lager_transform},
            {lager_extra_sinks, [epoch_mining,
                                 epoch_metrics,
                                 epoch_sync,
                                 aestratum]}]}.

%% NOTE: When possible deps are referenced by Git ref to ensure consistency between builds.
{deps, [
        %% off-the-shelf depdendencies

        {enoise, {git, "https://github.com/aeternity/enoise.git",
                 {ref, "1e6ee67"}}},

        {gproc, "0.6.1"},
        {jobs, "0.9.0"},
        {exometer_core, "1.5.7"},
        {yamerl, "0.7.0"},
        {eper, "0.99.1"},
        {ephemeral, "2.0.4"},
        {sext, "1.5.0"},

        {lager, {git, "https://github.com/aeternity/lager.git",
                {ref, "9d97ae3"}}}, % with trace-based msg suppression
        {cowboy, {git, "https://github.com/ninenines/cowboy.git",
                 {ref, "8d49ae3"}}}, % tag: 2.2.2"
        {idna, {git, "https://github.com/benoitc/erlang-idna",
               {ref, "6cff727"}}}, % tag: 6.0.0
        {nat, {git, "https://github.com/aeternity/erlang-nat.git",
              {ref, "dcdfb9c"}}},
        {jsx, {git, "https://github.com/talentdeficit/jsx.git",
              {ref, "3074d48"}}},
        {lz4, {git, "https://github.com/szktty/erlang-lz4.git",
              {ref, "9ea04f2"}}},

        %% deps originally from aeternity

        % The rocksdb dependencies are removed on win32 to reduce build times,
        % because they are currently not working on win32.
        {mnesia_rocksdb, {git, "https://github.com/aeternity/mnesia_rocksdb.git",
                         {ref, "8d3079f"}}},

        {mnesia_leveled, {git, "https://github.com/aeternity/mnesia_leveled.git",
                         {ref, "02a699d"}}},

        {aeminer, {git, "https://github.com/aeternity/aeminer.git",
                   {ref, "0a82f0f"}}},

        {aebytecode, {git, "https://github.com/aeternity/aebytecode.git", {ref, "7f0d309"}}},

        {aeserialization, {git, "https://github.com/aeternity/aeserialization.git",
                          {ref,"80ff8a4"}}},

        {aestratum_lib, {git, "https://github.com/aeternity/aestratum_lib.git",
                         {ref, "96ffd9a"}}},

        {ecrecover, {git, "https://github.com/aeternity/ecrecover.git",
                     {ref, "b3b6421"}}},

        {emcl, {git, "https://github.com/aeternity/emcl.git", {ref, "007e406"}}},

        %% forks

        % waiting for https://github.com/jlouis/enacl/pull/40 to be merged
        {enacl, {git, "https://github.com/aeternity/enacl.git",
                {ref, "26180f4"}}},


        {jesse, {git, "https://github.com/for-GET/jesse.git",
                {ref, "9f9d050"}}},

        % upstream is not maintained anymore
        {base58, {git, "https://github.com/aeternity/erl-base58.git",
                 {ref,"60a3356"}}},

        % upstream is not maintained anymore
        {sha3, {git, "https://github.com/aeternity/erlang-sha3",
               {ref, "b5f27a2"}}},

        % for lightweight trace-based debugging
        {trace_runner, {git, "git://github.com/uwiger/trace_runner.git",
                        {ref, "303ef2f"}}}

       ]}.

{plugins, [{swagger_endpoints, {git, "https://github.com/aeternity/swagger_endpoints", {ref, "d5a9f07"}}}]}.

{swagger_endpoints, [{src, "apps/aehttp/priv/swagger.yaml"}, {dst, "apps/aeutils/src/endpoints.erl"}]}.

{relx, [{release, { aeternity, "version value comes from VERSION" },
         % sasl is required for the command `aeternity versions` to work,
         % it is disabled in `sys.config` though.
         [runtime_tools, sasl, lager, setup, sext, gproc, jobs, lz4,
          {rocksdb, load}, {mnesia_rocksdb, load}, {mnesia, load}, {leveled, load}, {mnesia_leveled, load},
          parse_trans, exometer_core, ranch, aeminer, aecore, aehttp, enacl, enoise,
          aebytecode, aeserialization, aevm, aechannel, aefate, aemon, aestratum, ecrecover, aehyperchains]},
        {sys_config, "./config/sys.config"},
        {vm_args, "./config/vm.args"},

        {dev_mode, true},
        {include_erts, false},

        {overlay, [{copy, "REVISION", "REVISION"},
                   {copy, "VERSION" , "VERSION"},
                   {copy, "docs/build.md", "docs/build.md"},
                   {copy, "docs/build-windows.md", "docs/build-windows.md"},
                   {copy, "docs/installation.md" , "docs/installation.md"},
                   {copy, "docs/installation-windows.md", "docs/installation-windows.md"},
                   {copy, "docs/configuration.md" , "docs/configuration.md"},
                   {copy, "docs/cuda-miner.md", "docs/cuda-miner.md"},
                   {copy, "docs/operation.md" , "docs/operation.md"},
                   {copy, "docs/monitoring.md" , "docs/monitoring.md"},
                   {copy, "docs/release-notes" , "docs/release-notes"},
                   {mkdir, "data/aecore/.genesis"},
                   {copy, "data/aecore/.genesis/accounts.json", "data/aecore/.genesis/accounts.json"},
                   {copy, "data/aecore/.genesis/accounts_uat.json", "data/aecore/.genesis/accounts_uat.json"},
                   {copy, "data/aecore/.genesis/accounts_test.json", "data/aecore/.genesis/accounts_test.json"},
                   {copy, "data/aecore/.genesis/messages.json", "data/aecore/.genesis/messages.json"},
                   {mkdir, "data/aecore/.minerva"},
                   {copy, "data/aecore/.minerva/accounts.json", "data/aecore/.minerva/accounts.json"},
                   {copy, "data/aecore/.minerva/accounts_uat.json", "data/aecore/.minerva/accounts_uat.json"},
                   {copy, "data/aecore/.minerva/accounts_test.json", "data/aecore/.minerva/accounts_test.json"},
                   {mkdir, "data/aecore/.fortuna"},
                   {copy, "data/aecore/.fortuna/accounts.json", "data/aecore/.fortuna/accounts.json"},
                   {copy, "data/aecore/.fortuna/accounts_uat.json", "data/aecore/.fortuna/accounts_uat.json"},
                   {copy, "data/aecore/.fortuna/accounts_test.json", "data/aecore/.fortuna/accounts_test.json"},
                   {mkdir, "data/aecore/.lima"},
                   {copy, "data/aecore/.lima/accounts.json", "data/aecore/.lima/accounts.json"},
                   {copy, "data/aecore/.lima/accounts_uat.json", "data/aecore/.lima/accounts_uat.json"},
                   {copy, "data/aecore/.lima/accounts_test.json", "data/aecore/.lima/accounts_test.json"},
                   {copy, "data/aecore/.lima/extra_accounts.json", "data/aecore/.lima/extra_accounts.json"},
                   {copy, "data/aecore/.lima/extra_accounts_uat.json", "data/aecore/.lima/extra_accounts_uat.json"},
                   {copy, "data/aecore/.lima/extra_accounts_test.json", "data/aecore/.lima/extra_accounts_test.json"},
                   {copy, "data/aecore/.lima/contracts.json", "data/aecore/.lima/contracts.json"},
                   {copy, "data/aecore/.lima/contracts_uat.json", "data/aecore/.lima/contracts_uat.json"},
                   {copy, "data/aecore/.lima/contracts_test.json", "data/aecore/.lima/contracts_test.json"},
                   {copy, "hooks/pre_start.sh", "bin/hooks/pre_start.sh"},
                   {copy, "apps/check_config/priv/extensions/check_config.sh", "bin/extensions/check_config"},
                   {copy, "apps/aeutils/priv/extensions/keys_gen.sh", "bin/extensions/keys_gen"},
                   {copy, "apps/aeutils/priv/extensions/get_peer_key.sh", "bin/extensions/peer_key"},
                   {copy, "apps/aeutils/priv/extensions/export_chain.sh", "bin/extensions/export_chain"},
                   {copy, "apps/aeutils/priv/extensions/messages_hash.sh", "bin/extensions/messages_hash"}
                  ]},

        {extended_start_script, true},
        {extended_start_script_hooks, [
          {pre_start, [{custom, "hooks/pre_start.sh"}]}
        ]},
        {extended_start_script_extensions, [
              {check_config, "extensions/check_config"},
              {keys_gen, "extensions/keys_gen"},
              {peer_key, "extensions/peer_key"},
              {export, "extensions/export_chain"},
              {messages_hash, "extensions/messages_hash"}
        ]}]
}.

{profiles, [{local, [{relx, [{dev_mode, true},
                             {include_erts, false},
                             {include_src, true}]}]
            },
            {dev1, [{relx, [{dev_mode, false},
                            {include_erts, false},
                            {sys_config, "./config/dev1/sys.config"},
                            {vm_args, "./config/dev1/vm.args"},
                            {overlay, [{mkdir, "{{output_dir}}/data"},
                                       {copy,
                                        "_build/dev1/bin/check_config",
                                        "{{output_dir}}/bin/check_config"},
                                       {copy,
                                       "_build/dev1/lib/aeutils/priv/aeternity_config_schema.json",
                                       "{{output_dir}}/data/aeternity_config_schema.json"}]}
                           ]},
                     {erl_opts, [{d, 'TEST'}]}
                    ]
            },
            {test, [{relx, [{dev_mode, true},
                            {include_erts, false},
                            {include_src, true},
                            {sys_config, "./config/dev1/sys.config"},
                            {vm_args, "./config/dev1/vm.args"}]},
                    {dist_node, [{setcookie, 'aeternity_cookie'},
                                 {sname, 'aeternity_ct@localhost'}]},
                    {deps, [{meck, "0.8.12"},
                            {websocket_client, {git, "git://github.com/aeternity/websocket_client", {ref, "a4fb3db"}}},
                            {aesophia, {git, "https://github.com/aeternity/aesophia.git", {ref,"42cd47d"}}},
                            {aesophia_cli, {git, "git://github.com/aeternity/aesophia_cli", {tag, "v4.3.1"}}},
                            {aestratum_client, {git, "git://github.com/aeternity/aestratum_client", {ref, "d017dea"}}}
                           ]}
                   ]},
            {prod, [{relx, [{dev_mode, false},
                            {include_erts, true},
                            {include_src, false},
                            {overlay, [{copy,
                                        "_build/prod/bin/check_config",
                                        "bin/check_config"},
                                       {copy,
                                        "_build/prod/lib/aeutils/priv/aeternity_config_schema.json",
                                        "data/aeternity_config_schema.json"}]}
                           ]}
                   ]},
            {system_test, [
                {extra_src_dirs, ["system_test/common", "system_test/common/helpers", "apps/aehttp/test", "apps/aecontract/test/include"]},
                {shell, [{apps, []}]},
                {deps, [
                    bbmustache,
                    {hackney, "1.14.3"},
                    {websocket_client, ".*", {git, "git://github.com/aeternity/websocket_client", {ref, "a4fb3db"}}}
                ]},
                {ct_opts, [{create_priv_dir, auto_per_tc}]}
            ]},
            {eqc, [{project_app_dirs, ["eqc_test"]},
                   {extra_src_dirs, [ "eqc/aecore_eqc"
                                    , "eqc/aega_eqc"
                                    , "eqc/aeminer_eqc"
                                    , "eqc/aesophia_eqc"
                                    , "eqc/aechannel_eqc"
                                    , "eqc/aeutils_eqc"
                                    ]}]}
           ]
}.

{escript_main_app, check_config}.
{escript_name, "check_config"}.
{escript_incl_apps, [aeutils, jsx, yamerl, jesse, rfc3339]}.
{escript_shebang, "#!/usr/bin/env escript\n"}.
{escript_comment, "%%\n"}.

{overrides, [
  % We need to explicitely add lager as a compile-time dependency for
  % exometer_core, since we configure its logging to use lager.
  {add, exometer_core, [
    {deps, [{lager, ".*", {git, "https://github.com/erlang-lager/lager.git",
                          {ref, "69b4ada"}}} % tag: 3.6.7
           ]}]},
  {override, exometer_core, [
    {erl_opts, [{d,'HUT_LAGER'},
                {parse_transform, lager_transform},
                debug_info,
                fail_on_warning,
                {platform_define, "^((1[8|9])|2)", rand_module},
                {verbosity, trace}]
    }]}
  ]}.

{provider_hooks,
 [{pre, []},
  {post, [{compile, escriptize}]}]}.

{pre_hooks, [
	     {compile, "make -C ./otp_patches all"},
             {compile, "erlc test/ct_eunit_xform.erl"} %% {ct_first_files, _} does not work
            ]}.

{post_hooks, [{compile, "rm -f ct_eunit_xform.beam"},
              {clean, "make -C ./otp_patches clean"}
             ]}.

{ct_opts, [
  {ct_hooks, [{cth_surefire, [{path, "../junit.xml"}]},
              {aect_cache_restorer, []}]}
]}.

{dialyzer, [
            {warnings, [unknown]},
            {plt_apps, all_deps},
            {base_plt_apps, [erts, kernel, stdlib, crypto, mnesia, trace_runner]}
           ]}.

{edoc_opts, [{preprocess, true}]}.
