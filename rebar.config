{erl_opts, [debug_info, {parse_transform, lager_transform},
            {lager_extra_sinks, [epoch_mining, epoch_pow_cuckoo,
                                 epoch_metrics]}]}.
{deps, [{lager, ".*", {git, "https://github.com/erlang-lager/lager.git", {tag, "3.5.1"}}},
        {setup, "2.0.0"},
        {parse_trans, "3.1.0"},
        {gb_merkle_trees, {git, "https://github.com/aeternity/gb_merkle_trees.git", {ref, "4db7aad"}}},
        {cowboy, "1.0.4", {git, "https://github.com/ninenines/cowboy.git", {tag, "1.0.4"}}},
        {jsx, {git, "https://github.com/talentdeficit/jsx.git", {tag, "2.8.0"}}},
        {jesse, {git, "https://github.com/for-GET/jesse.git", {tag, "1.5.0-rc2"}}},
        {gproc, "0.6.1"},
        {jobs, "0.7.1"},
        {exometer_core, {git, "https://github.com/aeternity/exometer_core.git", {ref, "588da23"}}},
        {poolboy, "1.5.1"},
        {yamerl, "0.5.0"},
        {msgpack, "0.7.0"},
        {sha3, {git, "https://github.com/szktty/erlang-sha3"}},
        {eper, ".*", {git, "git://github.com/massemanet/eper.git", {tag, "0.97.6"}}},
        {erlexec, ".*", {git, "https://github.com/saleyn/erlexec.git", {ref, "97a5188"}}}
       ]}.

{relx, [{release, { epoch, "version value comes from VERSION" },
         [runtime_tools, lager, setup, gproc, jobs,
          exometer_core, aecore, aehttp, aebytecode, aevm, aering]},
        {sys_config, "./config/sys.config"},
        {vm_args, "./config/vm.args"},

        {dev_mode, true},
        {include_erts, false},

        {overlay, [{copy, "REVISION", "REVISION"},
                   {copy, "VERSION" , "VERSION"},
                   {mkdir, "data/aecore/.genesis"},
                   {copy, "data/aecore/.genesis/accounts.json", "data/aecore/.genesis/accounts.json"}]},
        {extended_start_script, true}]
}.

{plugins,
  [{tx_xform, {git, "https://github.com/aeternity/tx_xform.git", {ref, "d57aaed"}}}]}.

{tx_xform_opts,
  [{out_file, "aecore/src/aec_tx_dispatcher.erl"}]}.

{profiles, [{local, [{relx, [{dev_mode, true},
                             {include_erts, false},
                             {include_src, true}]}]
            },
            {dev1, [{relx, [{dev_mode, false},
                            {include_erts, false},
                            {sys_config, "./config/dev1/sys.config"},
                            {vm_args, "./config/dev1/vm.args"},
                            {overlay, [{mkdir, "{{output_dir}}/data"},
                                       {copy,
                                        "_build/dev1/bin/check_config",
                                        "{{output_dir}}/bin/check_config"},
                                       {copy,
                                       "_build/dev1/lib/aeutils/priv/epoch_config_schema.json",
                                       "{{output_dir}}/data/epoch_config_schema.json"}]}
                           ]}
                    ]
            },
            {test, [{relx, [{dev_mode, true},
                            {include_erts, false},
                            {include_src, true},
                            {sys_config, "./config/dev1/sys.config"},
                            {vm_args, "./config/dev1/vm.args"}]},
                    {dist_node, [{setcookie, 'epoch_cookie'},
                                 {sname, epoch_ct}]},
                    {deps, [{meck, ".*", {git, "git://github.com/eproxus/meck.git", {tag, "0.8.6"}}}
                           ]}
                   ]},
            {prod, [{relx, [{dev_mode, false},
                            {include_erts, true},
                            {include_src, false},
                            {overlay, [{copy,
                                        "_build/prod/bin/check_config",
                                        "bin/check_config"},
                                       {copy,
                                        "_build/prod/lib/aeutils/priv/epoch_config_schema.json",
                                        "data/epoch_config_schema.json"}]}
                           ]}
                   ]}
           ]
}.

{escript_main_app, check_config}.
{escript_name, "check_config"}.
{escript_incl_apps, [aeutils, jsx, yamerl, jesse, rfc3339]}.
{escript_shebang, "#!/usr/bin/env escript\n"}.
{escript_comment, "%%\n"}.

{overrides, [{override, exometer_core,
              [{erl_opts, [{d,'HUT_LAGER'},
                           {parse_transform, lager_transform},
                           debug_info,
                           fail_on_warning,
                           {platform_define, "^((1[8|9])|2)", rand_module},
                           {verbosity, trace}]}]}]}.

{provider_hooks,
 [{post, [{compile, {tx_xform, generate}},
          {compile, escriptize}]}]}.

{pre_hooks, [{"(linux|darwin|solaris|netbsd|freebsd)", compile,
              "git rev-parse HEAD > ${REBAR_ROOT_DIR}/REVISION"}]}.
{overrides, [{override, sha3, [{pre_hooks, [{"(linux|darwin)", compile, "make "},
					    {"(linux|darwin)", release, "make "},
					    {"(linux|darwin)", eunit, "make "}]}
			      ]}
	    ]}.
