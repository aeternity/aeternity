
contract Arithmetic =

  type state = int

  entrypoint init(i : int) =
    i

  entrypoint read() =
    state

  entrypoint pow(i : int) =
    switch(i)
        0 => 1
        n => state * pow(n - 1)

  entrypoint ackermann(x : int, y :int) =
    switch(x)
        0 => y + 1
        _ => switch(y)
                0 => ackermann(x - 1, 1)
                _ => ackermann(x - 1, ackermann(x, y - 1))
