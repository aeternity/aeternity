{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the [Aeternity](https://www.aeternity.com/) node API.",
    "version" : "4.1.0",
    "title" : "Aeternity node",
    "termsOfService" : "https://www.aeternity.com/terms/",
    "contact" : {
      "email" : "apiteam@aeternity.com"
    }
  },
  "basePath" : "/v2",
  "tags" : [ {
    "name" : "external",
    "description" : "External API"
  }, {
    "name" : "internal",
    "description" : "Internal API"
  }, {
    "name" : "chain",
    "description" : "Chain related endpoints"
  }, {
    "name" : "transaction",
    "description" : "Transaction related endpoints"
  }, {
    "name" : "account",
    "description" : "Account related endpoints"
  }, {
    "name" : "contract",
    "description" : "Contract related endpoints"
  }, {
    "name" : "oracle",
    "description" : "Oracle related endpoints"
  }, {
    "name" : "name_service",
    "description" : "Name service related endpoints"
  }, {
    "name" : "channel",
    "description" : "State channel related endpoints"
  }, {
    "name" : "node_info",
    "description" : "Node information related endpoints"
  }, {
    "name" : "debug",
    "description" : "Debug endpoints"
  }, {
    "name" : "obsolete",
    "description" : "Old endpoints that will be removed"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/blocks/top" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get the top block (either key or micro block)",
        "operationId" : "GetTopBlock",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/KeyBlockOrMicroBlockHeader"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key-blocks/current" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get the current key block",
        "operationId" : "GetCurrentKeyBlock",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/KeyBlock"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key-blocks/current/hash" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get the hash of the current key block",
        "operationId" : "GetCurrentKeyBlockHash",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "hash" : {
                  "$ref" : "#/definitions/EncodedHash"
                }
              }
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key-blocks/current/height" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get the height of the current key block",
        "operationId" : "GetCurrentKeyBlockHeight",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "height" : {
                  "$ref" : "#/definitions/UInt64"
                }
              }
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key-blocks/pending" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get the pending key block",
        "operationId" : "GetPendingKeyBlock",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/KeyBlock"
            }
          },
          "400" : {
            "description" : "Beneficiary not configured",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key-blocks/hash/{hash}" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get a key block by hash",
        "operationId" : "GetKeyBlockByHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the block",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/KeyBlock"
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key-blocks/height/{height}" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get a key block by height",
        "operationId" : "GetKeyBlockByHeight",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "height",
          "in" : "path",
          "description" : "The height",
          "required" : true,
          "type" : "integer",
          "maximum" : 18446744073709551615,
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/KeyBlock"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/key-blocks" : {
      "post" : {
        "tags" : [ "internal", "chain" ],
        "description" : "Post a mined key block",
        "operationId" : "PostKeyBlock",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Mined key block",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/KeyBlock"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid block",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/micro-blocks/hash/{hash}/header" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get a micro block header by hash",
        "operationId" : "GetMicroBlockHeaderByHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the block",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/MicroBlockHeader"
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/micro-blocks/hash/{hash}/transactions" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get micro block transactions by hash",
        "operationId" : "GetMicroBlockTransactionsByHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the block",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericTxs"
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/micro-blocks/hash/{hash}/transactions/index/{index}" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get a micro block transaction by hash and index",
        "operationId" : "GetMicroBlockTransactionByHashAndIndex",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the block",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "index",
          "in" : "path",
          "description" : "The index of the transaction in a block",
          "required" : true,
          "type" : "integer",
          "minimum" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericSignedTx"
            }
          },
          "400" : {
            "description" : "Invalid hash or index",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/micro-blocks/hash/{hash}/transactions/count" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get micro block transaction count by hash",
        "operationId" : "GetMicroBlockTransactionsCountByHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the block",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "count" : {
                  "description" : "Count",
                  "$ref" : "#/definitions/UInt32"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/generations/current" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get the current generation",
        "operationId" : "GetCurrentGeneration",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Generation"
            }
          },
          "404" : {
            "description" : "Generation not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/generations/hash/{hash}" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get a generation by hash",
        "operationId" : "GetGenerationByHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the generation",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Generation"
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Generation not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/generations/height/{height}" : {
      "get" : {
        "tags" : [ "external", "chain" ],
        "description" : "Get a generation by height",
        "operationId" : "GetGenerationByHeight",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "height",
          "in" : "path",
          "description" : "The height",
          "required" : true,
          "type" : "integer",
          "maximum" : 18446744073709551615,
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Generation"
            }
          },
          "404" : {
            "description" : "Generation not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts/{pubkey}" : {
      "get" : {
        "tags" : [ "external", "account" ],
        "description" : "Get an account by public key",
        "operationId" : "GetAccountByPubkey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The public key of the account",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "400" : {
            "description" : "Invalid public key",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts/{pubkey}/height/{height}" : {
      "get" : {
        "tags" : [ "external", "account" ],
        "description" : "Get an account by public key after the opening key block of the generation at height",
        "operationId" : "GetAccountByPubkeyAndHeight",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The public key of the account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "height",
          "in" : "path",
          "description" : "The height",
          "required" : true,
          "type" : "integer",
          "maximum" : 18446744073709551615,
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "400" : {
            "description" : "Invalid public key or invalid height",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found or height not available",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts/{pubkey}/hash/{hash}" : {
      "get" : {
        "tags" : [ "external", "account" ],
        "description" : "Get an account by public key after the block indicated by hash",
        "operationId" : "GetAccountByPubkeyAndHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The public key of the account",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the block",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          },
          "400" : {
            "description" : "Invalid public key or invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found or hash not available",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts/{pubkey}/transactions/pending" : {
      "get" : {
        "tags" : [ "external", "account" ],
        "description" : "Get pending account transactions by public key",
        "operationId" : "GetPendingAccountTransactionsByPubkey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The public key of the account",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericTxs"
            }
          },
          "400" : {
            "description" : "Invalid public key",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/transactions/{hash}" : {
      "get" : {
        "tags" : [ "external", "transaction" ],
        "description" : "Get a transaction by hash",
        "operationId" : "GetTransactionByHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericSignedTx"
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Transaction not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/transactions/{hash}/info" : {
      "get" : {
        "tags" : [ "external", "transaction" ],
        "operationId" : "GetTransactionInfoByHash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "path",
          "description" : "The hash of the transaction",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/TxInfoObject"
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Transaction not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/transactions" : {
      "post" : {
        "tags" : [ "external", "transaction" ],
        "description" : "Post a new transaction",
        "operationId" : "PostTransaction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The new transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Tx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/PostTxResponse"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/contracts/{pubkey}" : {
      "get" : {
        "tags" : [ "external", "contract" ],
        "description" : "Get a contract by pubkey",
        "operationId" : "GetContract",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The pubkey of the contract",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/ContractObject"
            }
          },
          "400" : {
            "description" : "Invalid pubkey",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Contract not found"
          }
        }
      }
    },
    "/contracts/{pubkey}/code" : {
      "get" : {
        "tags" : [ "external", "contract" ],
        "description" : "Get contract code by pubkey",
        "operationId" : "GetContractCode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The pubkey of the contract",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Contract code",
            "schema" : {
              "$ref" : "#/definitions/ByteCode"
            }
          },
          "400" : {
            "description" : "Invalid pubkey",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Contract not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/contracts/{pubkey}/store" : {
      "get" : {
        "tags" : [ "external", "contract" ],
        "description" : "Get contract store by pubkey",
        "operationId" : "GetContractStore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The pubkey of the contract",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Contract Store",
            "schema" : {
              "$ref" : "#/definitions/ContractStore"
            }
          },
          "400" : {
            "description" : "Invalid pubkey",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Contract not found"
          }
        }
      }
    },
    "/contracts/{pubkey}/poi" : {
      "get" : {
        "tags" : [ "external", "contract" ],
        "description" : "Get a proof of inclusion for a contract",
        "operationId" : "GetContractPoI",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "Contract pubkey to get proof for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/PoI"
            }
          },
          "400" : {
            "description" : "Invalid contract key",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Contract not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/oracles/{pubkey}" : {
      "get" : {
        "tags" : [ "external", "oracle" ],
        "description" : "Get an oracle by public key",
        "operationId" : "GetOracleByPubkey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The public key of the oracle",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/RegisteredOracle"
            }
          },
          "400" : {
            "description" : "Invalid public key",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Oracle not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/oracles/{pubkey}/queries" : {
      "get" : {
        "tags" : [ "external", "oracle" ],
        "description" : "Get oracle queries by public key",
        "operationId" : "GetOracleQueriesByPubkey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The public key of the oracle",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Last query id in previous page",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Max number of oracle queries",
          "required" : false,
          "type" : "integer",
          "maximum" : 1000,
          "minimum" : 1
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The type of a query: open, closed or all",
          "required" : false,
          "type" : "string",
          "enum" : [ "open", "closed", "all" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/OracleQueries"
            }
          },
          "400" : {
            "description" : "Invalid public key",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Oracle not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/oracles/{pubkey}/queries/{query-id}" : {
      "get" : {
        "tags" : [ "external", "oracle" ],
        "description" : "Get an oracle query by public key and query ID",
        "operationId" : "GetOracleQueryByPubkeyAndQueryId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The public key of the oracle",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "query-id",
          "in" : "path",
          "description" : "The ID of the query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/OracleQuery"
            }
          },
          "400" : {
            "description" : "Invalid public key or query ID",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Oracle query not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/names/{name}" : {
      "get" : {
        "tags" : [ "external", "name_service" ],
        "description" : "Get name entry from naming system",
        "operationId" : "GetNameEntryByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name key of the name entry",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/NameEntry"
            }
          },
          "400" : {
            "description" : "Invalid name",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Name not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/channels/{pubkey}" : {
      "get" : {
        "tags" : [ "external", "channel" ],
        "description" : "Get channel by public key",
        "operationId" : "GetChannelByPubkey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pubkey",
          "in" : "path",
          "description" : "The pubkey of the channel",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Channel"
            }
          },
          "400" : {
            "description" : "Invalid public key",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Channel not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/peers/pubkey" : {
      "get" : {
        "tags" : [ "external", "node_info" ],
        "description" : "Get peer public key",
        "operationId" : "GetPeerPubkey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/PeerPubKey"
            }
          }
        }
      }
    },
    "/status" : {
      "get" : {
        "tags" : [ "external", "node_info" ],
        "description" : "Get the status of a node",
        "operationId" : "GetStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Status"
            }
          }
        }
      }
    },
    "/debug/contracts/create" : {
      "post" : {
        "tags" : [ "internal", "contract", "debug" ],
        "description" : "Get a contract_create transaction object",
        "operationId" : "PostContractCreate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContractCreateTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateContractUnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Owner account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/contracts/call" : {
      "post" : {
        "tags" : [ "internal", "contract", "debug" ],
        "description" : "Get a contract_call transaction object",
        "operationId" : "PostContractCall",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ContractCallTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Caller account or contract not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/oracles/register" : {
      "post" : {
        "tags" : [ "internal", "oracle", "debug" ],
        "description" : "Get a oracle_register transaction object",
        "operationId" : "PostOracleRegister",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleRegisterTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/oracles/extend" : {
      "post" : {
        "tags" : [ "internal", "oracle", "debug" ],
        "description" : "Get an oracle_extend transaction object",
        "operationId" : "PostOracleExtend",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleExtendTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/oracles/query" : {
      "post" : {
        "tags" : [ "internal", "oracle", "debug" ],
        "description" : "Get an oracle_query transaction object",
        "operationId" : "PostOracleQuery",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleQueryTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account or oracle not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/oracles/respond" : {
      "post" : {
        "tags" : [ "internal", "oracle", "debug" ],
        "description" : "Get an oracle_response transaction object",
        "operationId" : "PostOracleRespond",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleRespondTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Oracle or query not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/names/preclaim" : {
      "post" : {
        "tags" : [ "internal", "name_service", "debug" ],
        "description" : "Get a name_preclaim transaction object",
        "operationId" : "PostNamePreclaim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NamePreclaimTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/names/claim" : {
      "post" : {
        "tags" : [ "internal", "name_service", "debug" ],
        "description" : "Get a name_claim transaction object",
        "operationId" : "PostNameClaim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NameClaimTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account or name not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/names/update" : {
      "post" : {
        "tags" : [ "internal", "name_service", "debug" ],
        "description" : "Get a name_update transaction object",
        "operationId" : "PostNameUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NameUpdateTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account or oracle not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/names/transfer" : {
      "post" : {
        "tags" : [ "internal", "name_service", "debug" ],
        "description" : "Get a name_transfer transaction object",
        "operationId" : "PostNameTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NameTransferTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account or name not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/names/revoke" : {
      "post" : {
        "tags" : [ "internal", "name_service", "debug" ],
        "description" : "Get a name_revoke transaction object",
        "operationId" : "PostNameRevoke",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NameRevokeTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account or name not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/transactions/spend" : {
      "post" : {
        "tags" : [ "internal", "transaction", "debug" ],
        "description" : "Get a spend transaction object",
        "operationId" : "PostSpend",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "A spend transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SpendTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Sender account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/create" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_create transaction object",
        "operationId" : "PostChannelCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelCreateTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Initiator not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/deposit" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_deposit transaction object",
        "operationId" : "PostChannelDeposit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelDepositTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/withdraw" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_withdrawal transaction object",
        "operationId" : "PostChannelWithdraw",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelWithdrawTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/snapshot/solo" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_snapshot_solo transaction object",
        "operationId" : "PostChannelSnapshotSolo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelSnapshotSoloTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/close/mutual" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_close_mutual transaction object",
        "operationId" : "PostChannelCloseMutual",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelCloseMutualTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/close/solo" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_close_solo transaction object",
        "operationId" : "PostChannelCloseSolo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelCloseSoloTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/slash" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_slash transaction object",
        "operationId" : "PostChannelSlash",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelSlashTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/channels/settle" : {
      "post" : {
        "tags" : [ "internal", "channel", "debug" ],
        "description" : "Get a channel_settle transaction object",
        "operationId" : "PostChannelSettle",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChannelSettleTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnsignedTx"
            }
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/transactions/pending" : {
      "get" : {
        "tags" : [ "internal", "transaction", "debug" ],
        "description" : "Get pending transactions",
        "operationId" : "GetPendingTransactions",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericTxs"
            }
          }
        }
      }
    },
    "/debug/names/commitment-id" : {
      "get" : {
        "tags" : [ "internal", "name_service", "debug" ],
        "description" : "Compute commitment ID for a given salt and name",
        "operationId" : "GetCommitmentId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "salt",
          "in" : "query",
          "description" : "Salt",
          "required" : true,
          "type" : "integer",
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommitmentId"
            }
          },
          "400" : {
            "description" : "Invalid name",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/accounts/beneficiary" : {
      "get" : {
        "tags" : [ "internal", "node_info", "debug" ],
        "description" : "Get node's beneficiary public key",
        "operationId" : "GetNodeBeneficiary",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/PubKey"
            }
          },
          "404" : {
            "description" : "Beneficiary error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/accounts/node" : {
      "get" : {
        "tags" : [ "internal", "node_info", "debug" ],
        "description" : "Get node's public key",
        "operationId" : "GetNodePubkey",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/PubKey"
            }
          },
          "404" : {
            "description" : "Public key not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/peers" : {
      "get" : {
        "tags" : [ "internal", "node_info", "debug" ],
        "description" : "Get node Peers",
        "operationId" : "GetPeers",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Peers"
            }
          },
          "403" : {
            "description" : "Info not enabled",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/transactions/dry-run" : {
      "post" : {
        "tags" : [ "internal", "debug" ],
        "description" : "Dry-run transactions on top of a given block. Supports SpendTx, ContractCreateTx and ContractCallTx",
        "operationId" : "DryRunTxs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "transactions",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DryRunInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Dry-run result",
            "schema" : {
              "$ref" : "#/definitions/DryRunResults"
            }
          },
          "403" : {
            "description" : "Invalid input",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/debug/token-supply/height/{height}" : {
      "get" : {
        "tags" : [ "internal", "debug" ],
        "description" : "Get total token supply at height",
        "operationId" : "GetTokenSupplyByHeight",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "height",
          "in" : "path",
          "description" : "The height",
          "required" : true,
          "type" : "integer",
          "maximum" : 18446744073709551615,
          "minimum" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "Total token supply at height divided in categories",
            "schema" : {
              "$ref" : "#/definitions/TokenSupply"
            }
          },
          "400" : {
            "description" : "Height not available",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "UInt" : {
      "type" : "integer",
      "minimum" : 0
    },
    "UInt16" : {
      "type" : "integer",
      "minimum" : 0,
      "maximum" : 65535
    },
    "UInt32" : {
      "type" : "integer",
      "minimum" : 0,
      "maximum" : 4294967295
    },
    "UInt64" : {
      "type" : "integer",
      "minimum" : 0,
      "maximum" : 18446744073709551615
    },
    "TxBlockHeight" : {
      "type" : "integer",
      "minimum" : -1,
      "maximum" : 18446744073709551615
    },
    "EncodedHash" : {
      "type" : "string",
      "description" : "Base58Check encoded tagged hash"
    },
    "EncodedPubkey" : {
      "type" : "string",
      "description" : "Base58Check encoded tagged pubkey"
    },
    "EncodedValue" : {
      "type" : "string",
      "description" : "Base58Check encoded tagged value"
    },
    "EncodedByteArray" : {
      "type" : "string",
      "description" : "Base64Check encoded tagged byte array"
    },
    "Pow" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/UInt32"
      },
      "minItems" : 42,
      "maxItems" : 42
    },
    "KeyBlock" : {
      "type" : "object",
      "required" : [ "beneficiary", "hash", "height", "info", "miner", "prev_hash", "prev_key_hash", "state_hash", "target", "time", "version" ],
      "properties" : {
        "hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "height" : {
          "$ref" : "#/definitions/UInt64"
        },
        "prev_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "prev_key_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "state_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "miner" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "beneficiary" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "target" : {
          "$ref" : "#/definitions/UInt32"
        },
        "pow" : {
          "$ref" : "#/definitions/Pow"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "time" : {
          "$ref" : "#/definitions/UInt64"
        },
        "version" : {
          "$ref" : "#/definitions/UInt32"
        },
        "info" : {
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "miner" : { },
        "target" : { },
        "pow" : "",
        "hash" : { },
        "height" : { },
        "info" : { }
      }
    },
    "MicroBlockHeader" : {
      "type" : "object",
      "required" : [ "hash", "height", "pof_hash", "prev_hash", "prev_key_hash", "signature", "state_hash", "time", "txs_hash", "version" ],
      "properties" : {
        "hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "height" : {
          "$ref" : "#/definitions/UInt64"
        },
        "pof_hash" : {
          "description" : "\"no_fraud\" | api encoded Proof of Fraud hash",
          "$ref" : "#/definitions/EncodedHash"
        },
        "prev_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "prev_key_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "state_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "txs_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "signature" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "time" : {
          "$ref" : "#/definitions/UInt64"
        },
        "version" : {
          "$ref" : "#/definitions/UInt32"
        }
      },
      "example" : {
        "signature" : { }
      }
    },
    "KeyBlockOrMicroBlockHeader" : {
      "type" : "object",
      "properties" : {
        "key_block" : {
          "$ref" : "#/definitions/KeyBlock"
        },
        "micro_block" : {
          "$ref" : "#/definitions/MicroBlockHeader"
        }
      },
      "example" : {
        "micro_block" : {
          "signature" : { }
        },
        "key_block" : {
          "miner" : { },
          "target" : { },
          "pow" : "",
          "hash" : { },
          "height" : { },
          "info" : { }
        }
      }
    },
    "GenericTxs" : {
      "type" : "object",
      "required" : [ "transactions" ],
      "properties" : {
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GenericSignedTx"
          }
        }
      },
      "example" : {
        "transactions" : [ {
          "tx" : {
            "type" : "type",
            "version" : { }
          },
          "block_hash" : { },
          "block_height" : { },
          "signatures" : [ { }, { } ]
        }, {
          "tx" : {
            "type" : "type",
            "version" : { }
          },
          "block_hash" : { },
          "block_height" : { },
          "signatures" : [ { }, { } ]
        } ]
      }
    },
    "Account" : {
      "type" : "object",
      "required" : [ "balance", "id", "nonce" ],
      "properties" : {
        "id" : {
          "description" : "Public key",
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "balance" : {
          "description" : "Balance",
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "description" : "Nonce",
          "$ref" : "#/definitions/UInt64"
        },
        "kind" : {
          "type" : "string",
          "enum" : [ "basic", "generalized" ]
        },
        "contract_id" : {
          "description" : "Id of authorization contract for generalized account",
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "auth_fun" : {
          "type" : "string",
          "description" : "Name of authorization function for generalized account"
        }
      },
      "example" : {
        "balance" : { },
        "kind" : "basic",
        "id" : { },
        "auth_fun" : "auth_fun",
        "nonce" : { }
      }
    },
    "Tx" : {
      "type" : "object",
      "required" : [ "tx" ],
      "properties" : {
        "tx" : {
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "tx" : { }
      }
    },
    "RegisteredOracle" : {
      "type" : "object",
      "required" : [ "abi_version", "id", "query_fee", "query_format", "response_format", "ttl" ],
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "query_format" : {
          "type" : "string"
        },
        "response_format" : {
          "type" : "string"
        },
        "query_fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "abi_version" : {
          "$ref" : "#/definitions/UInt16"
        }
      },
      "example" : {
        "response_format" : "response_format",
        "abi_version" : { },
        "id" : { },
        "query_fee" : { },
        "ttl" : { },
        "query_format" : "query_format"
      }
    },
    "OracleQuery" : {
      "type" : "object",
      "required" : [ "fee", "id", "oracle_id", "query", "response", "response_ttl", "sender_id", "sender_nonce", "ttl" ],
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "sender_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "sender_nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "oracle_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "query" : {
          "type" : "string"
        },
        "response" : {
          "type" : "string"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "response_ttl" : {
          "$ref" : "#/definitions/TTL"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        }
      },
      "example" : {
        "response_ttl" : {
          "type" : "delta"
        },
        "response" : "response",
        "query" : "query",
        "fee" : { },
        "sender_nonce" : { },
        "id" : { },
        "sender_id" : { }
      }
    },
    "OracleQueries" : {
      "type" : "object",
      "required" : [ "oracle_queries" ],
      "properties" : {
        "oracle_queries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OracleQuery"
          }
        }
      },
      "example" : {
        "oracle_queries" : [ {
          "response_ttl" : {
            "type" : "delta"
          },
          "response" : "response",
          "query" : "query",
          "fee" : { },
          "sender_nonce" : { },
          "id" : { },
          "sender_id" : { }
        }, {
          "response_ttl" : {
            "type" : "delta"
          },
          "response" : "response",
          "query" : "query",
          "fee" : { },
          "sender_nonce" : { },
          "id" : { },
          "sender_id" : { }
        } ]
      }
    },
    "SpendTx" : {
      "type" : "object",
      "required" : [ "amount", "fee", "payload", "recipient_id", "sender_id" ],
      "properties" : {
        "recipient_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "sender_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "payload" : {
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "amount" : { },
        "payload" : { },
        "ttl" : { },
        "recipient_id" : { }
      }
    },
    "OracleRegisterTx" : {
      "type" : "object",
      "required" : [ "account_id", "fee", "oracle_ttl", "query_fee", "query_format", "response_format" ],
      "properties" : {
        "query_format" : {
          "type" : "string"
        },
        "response_format" : {
          "type" : "string"
        },
        "query_fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "oracle_ttl" : {
          "$ref" : "#/definitions/TTL"
        },
        "account_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "abi_version" : {
          "$ref" : "#/definitions/UInt16"
        }
      },
      "example" : {
        "response_format" : "response_format",
        "account_id" : { },
        "oracle_ttl" : {
          "type" : "delta"
        },
        "abi_version" : { },
        "query_fee" : { },
        "nonce" : { },
        "query_format" : "query_format"
      }
    },
    "OracleExtendTx" : {
      "type" : "object",
      "required" : [ "fee", "oracle_id", "oracle_ttl" ],
      "properties" : {
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "oracle_ttl" : {
          "$ref" : "#/definitions/RelativeTTL"
        },
        "oracle_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "oracle_id" : { },
        "fee" : { },
        "oracle_ttl" : {
          "type" : "delta",
          "value" : { }
        }
      }
    },
    "OracleQueryTx" : {
      "type" : "object",
      "required" : [ "fee", "oracle_id", "query", "query_fee", "query_ttl", "response_ttl", "sender_id" ],
      "properties" : {
        "oracle_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "query" : {
          "type" : "string"
        },
        "query_fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "query_ttl" : {
          "$ref" : "#/definitions/TTL"
        },
        "response_ttl" : {
          "$ref" : "#/definitions/RelativeTTL"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "sender_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "description" : "Sender nonce",
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "oracle_id" : { },
        "response_ttl" : {
          "type" : "delta",
          "value" : { }
        },
        "query" : "query",
        "query_ttl" : {
          "type" : "delta"
        },
        "query_fee" : { },
        "ttl" : { }
      }
    },
    "OracleRespondTx" : {
      "type" : "object",
      "required" : [ "fee", "oracle_id", "query_id", "response", "response_ttl" ],
      "properties" : {
        "query_id" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "response" : {
          "type" : "string"
        },
        "response_ttl" : {
          "$ref" : "#/definitions/RelativeTTL"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "oracle_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "response_ttl" : {
          "type" : "delta",
          "value" : { }
        },
        "oracle_id" : { },
        "query_id" : { },
        "response" : "response",
        "fee" : { },
        "ttl" : { }
      }
    },
    "TTL" : {
      "type" : "object",
      "required" : [ "type", "value" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "delta", "block" ]
        },
        "value" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "type" : "delta"
      }
    },
    "RelativeTTL" : {
      "type" : "object",
      "required" : [ "type", "value" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "delta" ]
        },
        "value" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "type" : "delta",
        "value" : { }
      }
    },
    "NameEntry" : {
      "type" : "object",
      "required" : [ "id", "pointers", "ttl" ],
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "pointers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NamePointer"
          }
        }
      },
      "example" : {
        "id" : { },
        "ttl" : { },
        "pointers" : [ {
          "id" : { },
          "key" : "key"
        }, {
          "id" : { },
          "key" : "key"
        } ]
      }
    },
    "NamePreclaimTx" : {
      "type" : "object",
      "required" : [ "account_id", "commitment_id", "fee" ],
      "properties" : {
        "commitment_id" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "account_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "NameClaimTx" : {
      "type" : "object",
      "required" : [ "account_id", "fee", "name", "name_salt" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "name_salt" : {
          "$ref" : "#/definitions/UInt"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "account_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "NameUpdateTx" : {
      "type" : "object",
      "required" : [ "account_id", "client_ttl", "fee", "name_id", "name_ttl", "pointers" ],
      "properties" : {
        "name_id" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "name_ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "pointers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NamePointer"
          }
        },
        "client_ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "account_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "NameTransferTx" : {
      "type" : "object",
      "required" : [ "account_id", "fee", "name_id", "recipient_id" ],
      "properties" : {
        "name_id" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "recipient_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "account_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "NameRevokeTx" : {
      "type" : "object",
      "required" : [ "account_id", "fee", "name_id" ],
      "properties" : {
        "name_id" : {
          "$ref" : "#/definitions/EncodedValue"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "account_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "CommitmentId" : {
      "type" : "object",
      "required" : [ "commitment_id" ],
      "properties" : {
        "commitment_id" : {
          "$ref" : "#/definitions/EncodedValue"
        }
      },
      "example" : {
        "commitment_id" : { }
      }
    },
    "NameHash" : {
      "type" : "object",
      "required" : [ "name_id" ],
      "properties" : {
        "name_id" : {
          "$ref" : "#/definitions/EncodedValue"
        }
      }
    },
    "NamePointer" : {
      "type" : "object",
      "required" : [ "id", "key" ],
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        }
      },
      "example" : {
        "id" : { },
        "key" : "key"
      }
    },
    "Channel" : {
      "type" : "object",
      "required" : [ "channel_amount", "channel_reserve", "delegate_ids", "id", "initiator_amount", "initiator_id", "lock_period", "locked_until", "responder_amount", "responder_id", "round", "solo_round", "state_hash" ],
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "initiator_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "responder_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "channel_amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "initiator_amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "responder_amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "channel_reserve" : {
          "$ref" : "#/definitions/UInt"
        },
        "delegate_ids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncodedPubkey"
          }
        },
        "state_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "round" : {
          "$ref" : "#/definitions/UInt64"
        },
        "solo_round" : {
          "$ref" : "#/definitions/UInt64"
        },
        "lock_period" : {
          "$ref" : "#/definitions/UInt64"
        },
        "locked_until" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "delegate_ids" : [ null, null ],
        "round" : { },
        "state_hash" : { },
        "id" : { },
        "channel_amount" : { }
      }
    },
    "ChannelCreateTx" : {
      "type" : "object",
      "required" : [ "channel_reserve", "fee", "initiator_amount", "initiator_id", "lock_period", "push_amount", "responder_amount", "responder_id", "state_hash" ],
      "properties" : {
        "initiator_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "initiator_amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "responder_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "responder_amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "push_amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "channel_reserve" : {
          "$ref" : "#/definitions/UInt"
        },
        "lock_period" : {
          "$ref" : "#/definitions/UInt64"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "state_hash" : {
          "description" : "Root hash of the channel's internal state tree",
          "$ref" : "#/definitions/EncodedHash"
        },
        "delegate_ids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncodedPubkey"
          }
        }
      }
    },
    "ChannelDepositTx" : {
      "type" : "object",
      "required" : [ "amount", "channel_id", "fee", "from_id", "nonce", "round", "state_hash" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "from_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "state_hash" : {
          "description" : "Root hash of the channel's internal state tree after the deposit had been applied to it",
          "$ref" : "#/definitions/EncodedHash"
        },
        "round" : {
          "description" : "Channel's next round",
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "ChannelWithdrawTx" : {
      "type" : "object",
      "required" : [ "amount", "channel_id", "fee", "nonce", "round", "state_hash", "to_id" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "to_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "state_hash" : {
          "description" : "Root hash of the channel's internal state tree after the withdraw had been applied to it",
          "$ref" : "#/definitions/EncodedHash"
        },
        "round" : {
          "description" : "Channel's next round",
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "ChannelForceProgressTx" : {
      "type" : "object",
      "required" : [ "channel_id", "fee", "from_id", "payload", "round", "state_hash", "update" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "from_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "payload" : {
          "$ref" : "#/definitions/EncodedByteArray"
        },
        "round" : {
          "description" : "Channel's next round",
          "$ref" : "#/definitions/UInt64"
        },
        "update" : {
          "description" : "Update to be applied. Must be a OffChainCallContract",
          "$ref" : "#/definitions/OffChainUpdate"
        },
        "state_hash" : {
          "description" : "Channel's next state_hash",
          "$ref" : "#/definitions/EncodedHash"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "offchain_trees" : {
          "description" : "The whole set of off-chain state trees",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      }
    },
    "ChannelCloseMutualTx" : {
      "type" : "object",
      "required" : [ "channel_id", "fee", "from_id", "initiator_amount_final", "nonce", "responder_amount_final" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "from_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "initiator_amount_final" : {
          "$ref" : "#/definitions/UInt"
        },
        "responder_amount_final" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt64"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "ChannelCloseSoloTx" : {
      "type" : "object",
      "required" : [ "channel_id", "fee", "from_id", "payload", "poi" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "from_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "payload" : {
          "$ref" : "#/definitions/EncodedByteArray"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "poi" : {
          "description" : "Proof of inclusion containing information for closing the channel",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      }
    },
    "ChannelSlashTx" : {
      "type" : "object",
      "required" : [ "channel_id", "fee", "from_id", "payload", "poi" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "from_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "payload" : {
          "$ref" : "#/definitions/EncodedByteArray"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "poi" : {
          "description" : "Proof of inclusion containing information for closing the channel",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      }
    },
    "ChannelSettleTx" : {
      "type" : "object",
      "required" : [ "channel_id", "fee", "from_id", "initiator_amount_final", "nonce", "responder_amount_final" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "from_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "initiator_amount_final" : {
          "$ref" : "#/definitions/UInt"
        },
        "responder_amount_final" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "ChannelSnapshotSoloTx" : {
      "type" : "object",
      "required" : [ "channel_id", "fee", "from_id", "payload" ],
      "properties" : {
        "channel_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "from_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "payload" : {
          "$ref" : "#/definitions/EncodedByteArray"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "nonce" : {
          "$ref" : "#/definitions/UInt64"
        }
      }
    },
    "PeerPubKey" : {
      "type" : "object",
      "required" : [ "pubkey" ],
      "properties" : {
        "pubkey" : {
          "$ref" : "#/definitions/EncodedPubkey"
        }
      },
      "example" : {
        "pubkey" : { }
      }
    },
    "PubKey" : {
      "type" : "object",
      "required" : [ "pub_key" ],
      "properties" : {
        "pub_key" : {
          "$ref" : "#/definitions/EncodedPubkey"
        }
      },
      "example" : {
        "pub_key" : { }
      }
    },
    "Status" : {
      "type" : "object",
      "required" : [ "difficulty", "genesis_key_block_hash", "listening", "network_id", "node_revision", "node_version", "peer_count", "peer_pubkey", "pending_transactions_count", "protocols", "solutions", "syncing", "top_block_height", "top_key_block_hash" ],
      "properties" : {
        "genesis_key_block_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "solutions" : {
          "$ref" : "#/definitions/UInt64"
        },
        "difficulty" : {
          "$ref" : "#/definitions/UInt64"
        },
        "syncing" : {
          "type" : "boolean"
        },
        "sync_progress" : {
          "type" : "number",
          "format" : "float",
          "minimum" : 0.0,
          "maximum" : 100.0
        },
        "listening" : {
          "type" : "boolean"
        },
        "protocols" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Protocol"
          }
        },
        "node_version" : {
          "type" : "string"
        },
        "node_revision" : {
          "type" : "string"
        },
        "peer_count" : {
          "$ref" : "#/definitions/UInt32"
        },
        "pending_transactions_count" : {
          "$ref" : "#/definitions/UInt32"
        },
        "network_id" : {
          "type" : "string"
        },
        "peer_pubkey" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "top_key_block_hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "top_block_height" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "listening" : true,
        "genesis_key_block_hash" : { },
        "syncing" : true,
        "node_revision" : "node_revision",
        "peer_pubkey" : { },
        "solutions" : { },
        "node_version" : "node_version",
        "sync_progress" : 8.008282,
        "network_id" : "network_id",
        "protocols" : [ {
          "version" : { }
        }, {
          "version" : { }
        } ]
      }
    },
    "Protocol" : {
      "type" : "object",
      "required" : [ "effective_at_height", "version" ],
      "properties" : {
        "version" : {
          "$ref" : "#/definitions/UInt32"
        },
        "effective_at_height" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "version" : { }
      }
    },
    "GenericSignedTx" : {
      "type" : "object",
      "required" : [ "block_hash", "block_height", "hash", "tx" ],
      "properties" : {
        "tx" : {
          "$ref" : "#/definitions/GenericTx"
        },
        "block_height" : {
          "$ref" : "#/definitions/TxBlockHeight"
        },
        "block_hash" : {
          "description" : "Value \"none\" means no block in the chain includes the transaction",
          "$ref" : "#/definitions/EncodedHash"
        },
        "hash" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "signatures" : {
          "type" : "array",
          "description" : "signatures required unless for Generalized Account Meta transactions",
          "items" : {
            "$ref" : "#/definitions/EncodedValue"
          },
          "minItems" : 1
        }
      },
      "example" : {
        "tx" : {
          "type" : "type",
          "version" : { }
        },
        "block_hash" : { },
        "block_height" : { },
        "signatures" : [ { }, { } ]
      }
    },
    "GenericTx" : {
      "type" : "object",
      "required" : [ "type", "version" ],
      "discriminator" : "type",
      "properties" : {
        "version" : {
          "$ref" : "#/definitions/UInt32"
        },
        "type" : {
          "type" : "string"
        }
      },
      "example" : {
        "type" : "type",
        "version" : { }
      }
    },
    "ChannelCreateTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelCreateTx"
      } ]
    },
    "ChannelDepositTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelDepositTx"
      } ]
    },
    "ChannelWithdrawalTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelWithdrawTx"
      } ]
    },
    "ChannelForceProgressTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelForceProgressTx"
      } ]
    },
    "ChannelCloseMutualTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelCloseMutualTx"
      } ]
    },
    "ChannelCloseSoloTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelCloseSoloTx"
      } ]
    },
    "ChannelSlashTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelSlashTx"
      } ]
    },
    "ChannelSettleTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelSettleTx"
      } ]
    },
    "ChannelSnapshotSoloTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ChannelSnapshotSoloTx"
      } ]
    },
    "SpendTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/SpendTx"
      } ]
    },
    "OracleRegisterTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/OracleRegisterTx"
      } ]
    },
    "OracleExtendTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/OracleExtendTx"
      } ]
    },
    "OracleQueryTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/OracleQueryTx"
      } ]
    },
    "OracleResponseTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/OracleRespondTx"
      } ]
    },
    "NamePreclaimTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/NamePreclaimTx"
      } ]
    },
    "NameClaimTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/NameClaimTx"
      } ]
    },
    "NameUpdateTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/NameUpdateTx"
      } ]
    },
    "NameTransferTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/NameTransferTx"
      } ]
    },
    "NameRevokeTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/NameRevokeTx"
      } ]
    },
    "ContractCreateTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ContractCreateTx"
      } ]
    },
    "ContractCallTxJSON" : {
      "allOf" : [ {
        "$ref" : "#/definitions/GenericTx"
      }, {
        "$ref" : "#/definitions/ContractCallTx"
      } ]
    },
    "TxInfoObject" : {
      "type" : "object",
      "properties" : {
        "call_info" : {
          "$ref" : "#/definitions/ContractCallObject"
        },
        "ga_info" : {
          "$ref" : "#/definitions/GAObject"
        },
        "tx_info" : {
          "type" : "string"
        }
      },
      "example" : {
        "ga_info" : {
          "return_type" : "return_type"
        },
        "tx_info" : "tx_info",
        "call_info" : {
          "gas_price" : { },
          "return_type" : "return_type",
          "log" : [ {
            "data" : { },
            "topics" : [ null, null ]
          }, {
            "data" : { },
            "topics" : [ null, null ]
          } ],
          "caller_id" : { },
          "caller_nonce" : { }
        }
      }
    },
    "ContractCallObject" : {
      "type" : "object",
      "required" : [ "caller_id", "caller_nonce", "contract_id", "gas_price", "gas_used", "height", "log", "return_type", "return_value" ],
      "properties" : {
        "caller_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "caller_nonce" : {
          "$ref" : "#/definitions/UInt64"
        },
        "height" : {
          "$ref" : "#/definitions/UInt64"
        },
        "contract_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "gas_price" : {
          "$ref" : "#/definitions/UInt"
        },
        "gas_used" : {
          "$ref" : "#/definitions/UInt64"
        },
        "log" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Event"
          }
        },
        "return_value" : {
          "$ref" : "#/definitions/EncodedByteArray"
        },
        "return_type" : {
          "type" : "string",
          "description" : "The status of the call 'ok | error | revert'."
        }
      },
      "example" : {
        "gas_price" : { },
        "return_type" : "return_type",
        "log" : [ {
          "data" : { },
          "topics" : [ null, null ]
        }, {
          "data" : { },
          "topics" : [ null, null ]
        } ],
        "caller_id" : { },
        "caller_nonce" : { }
      }
    },
    "GAObject" : {
      "type" : "object",
      "required" : [ "caller_id", "gas_price", "gas_used", "height", "return_type", "return_value" ],
      "properties" : {
        "caller_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "height" : {
          "$ref" : "#/definitions/UInt64"
        },
        "gas_price" : {
          "$ref" : "#/definitions/UInt"
        },
        "gas_used" : {
          "$ref" : "#/definitions/UInt64"
        },
        "return_value" : {
          "$ref" : "#/definitions/EncodedByteArray"
        },
        "return_type" : {
          "type" : "string",
          "description" : "The status of the call 'ok | error'."
        },
        "inner_object" : {
          "$ref" : "#/definitions/TxInfoObject"
        }
      },
      "example" : {
        "return_type" : "return_type"
      }
    },
    "Event" : {
      "type" : "object",
      "required" : [ "address", "data", "topics" ],
      "properties" : {
        "address" : {
          "description" : "Contract address",
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "topics" : {
          "type" : "array",
          "description" : "Event topics",
          "items" : {
            "$ref" : "#/definitions/UInt"
          }
        },
        "data" : {
          "description" : "Log event data (as contract byte array).",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "data" : { },
        "topics" : [ null, null ]
      }
    },
    "Error" : {
      "type" : "object",
      "required" : [ "reason" ],
      "properties" : {
        "reason" : {
          "type" : "string"
        }
      }
    },
    "ContractObject" : {
      "type" : "object",
      "required" : [ "abi_version", "active", "deposit", "id", "owner_id", "referrer_ids", "vm_version" ],
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "owner_id" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "vm_version" : {
          "$ref" : "#/definitions/UInt16"
        },
        "abi_version" : {
          "$ref" : "#/definitions/UInt16"
        },
        "active" : {
          "type" : "boolean"
        },
        "referrer_ids" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncodedPubkey"
          }
        },
        "deposit" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "vm_version" : { },
        "active" : true,
        "deposit" : { },
        "referrer_ids" : [ null, null ],
        "id" : { }
      }
    },
    "ContractStore" : {
      "type" : "object",
      "required" : [ "store" ],
      "properties" : {
        "store" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContractStore_store"
          }
        }
      },
      "example" : {
        "store" : [ {
          "value" : { },
          "key" : "key"
        }, {
          "value" : { },
          "key" : "key"
        } ]
      }
    },
    "ByteCode" : {
      "type" : "object",
      "required" : [ "bytecode" ],
      "properties" : {
        "bytecode" : {
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "bytecode" : { }
      }
    },
    "DryRunInput" : {
      "type" : "object",
      "required" : [ "txs" ],
      "properties" : {
        "top" : {
          "$ref" : "#/definitions/EncodedHash"
        },
        "accounts" : {
          "type" : "array",
          "description" : "Accounts",
          "items" : {
            "$ref" : "#/definitions/DryRunAccount"
          }
        },
        "txs" : {
          "type" : "array",
          "description" : "Txs",
          "items" : {
            "$ref" : "#/definitions/EncodedByteArray"
          }
        }
      },
      "example" : {
        "top" : { },
        "accounts" : [ {
          "amount" : { },
          "pub_key" : { }
        }, {
          "amount" : { },
          "pub_key" : { }
        } ],
        "txs" : [ { }, { } ]
      }
    },
    "DryRunAccount" : {
      "type" : "object",
      "required" : [ "amount", "pub_key" ],
      "properties" : {
        "pub_key" : {
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "amount" : {
          "$ref" : "#/definitions/UInt"
        }
      },
      "example" : {
        "amount" : { },
        "pub_key" : { }
      }
    },
    "DryRunResults" : {
      "type" : "object",
      "required" : [ "results" ],
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "results",
          "items" : {
            "$ref" : "#/definitions/DryRunResult"
          }
        }
      },
      "example" : {
        "results" : [ {
          "result" : "result",
          "reason" : "reason",
          "type" : "type",
          "call_obj" : {
            "gas_price" : { },
            "return_type" : "return_type",
            "log" : [ {
              "data" : { },
              "topics" : [ null, null ]
            }, {
              "data" : { },
              "topics" : [ null, null ]
            } ],
            "caller_id" : { },
            "caller_nonce" : { }
          }
        }, {
          "result" : "result",
          "reason" : "reason",
          "type" : "type",
          "call_obj" : {
            "gas_price" : { },
            "return_type" : "return_type",
            "log" : [ {
              "data" : { },
              "topics" : [ null, null ]
            }, {
              "data" : { },
              "topics" : [ null, null ]
            } ],
            "caller_id" : { },
            "caller_nonce" : { }
          }
        } ]
      }
    },
    "DryRunResult" : {
      "type" : "object",
      "required" : [ "result", "type" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "result" : {
          "type" : "string"
        },
        "reason" : {
          "type" : "string"
        },
        "call_obj" : {
          "$ref" : "#/definitions/ContractCallObject"
        }
      },
      "example" : {
        "result" : "result",
        "reason" : "reason",
        "type" : "type",
        "call_obj" : {
          "gas_price" : { },
          "return_type" : "return_type",
          "log" : [ {
            "data" : { },
            "topics" : [ null, null ]
          }, {
            "data" : { },
            "topics" : [ null, null ]
          } ],
          "caller_id" : { },
          "caller_nonce" : { }
        }
      }
    },
    "Peer" : {
      "type" : "string",
      "description" : "Aeternity node"
    },
    "Peers" : {
      "type" : "object",
      "required" : [ "blocked", "peers" ],
      "properties" : {
        "peers" : {
          "type" : "array",
          "description" : "All discovered peers",
          "items" : {
            "$ref" : "#/definitions/Peer"
          }
        },
        "blocked" : {
          "type" : "array",
          "description" : "All blocked peers",
          "items" : {
            "$ref" : "#/definitions/Peer"
          }
        }
      },
      "example" : {
        "blocked" : [ null, null ],
        "peers" : [ { }, { } ]
      }
    },
    "ContractCreateTx" : {
      "type" : "object",
      "required" : [ "abi_version", "amount", "call_data", "code", "deposit", "fee", "gas", "gas_price", "owner_id", "vm_version" ],
      "properties" : {
        "owner_id" : {
          "description" : "Contract owner pub_key",
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "description" : "Owner's nonce",
          "$ref" : "#/definitions/UInt64"
        },
        "code" : {
          "description" : "Contract's code",
          "$ref" : "#/definitions/EncodedByteArray"
        },
        "vm_version" : {
          "description" : "Virtual machine's version",
          "$ref" : "#/definitions/UInt16"
        },
        "abi_version" : {
          "description" : "ABI version",
          "$ref" : "#/definitions/UInt16"
        },
        "deposit" : {
          "$ref" : "#/definitions/UInt"
        },
        "amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "gas" : {
          "$ref" : "#/definitions/UInt64"
        },
        "gas_price" : {
          "$ref" : "#/definitions/UInt"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "call_data" : {
          "description" : "Contract call data",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "vm_version" : { },
        "code" : { },
        "owner_id" : { },
        "deposit" : { },
        "nonce" : { }
      }
    },
    "ContractCallTx" : {
      "type" : "object",
      "required" : [ "abi_version", "amount", "call_data", "caller_id", "contract_id", "fee", "gas", "gas_price" ],
      "properties" : {
        "caller_id" : {
          "description" : "Contract caller pub_key",
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "nonce" : {
          "description" : "Caller's nonce",
          "$ref" : "#/definitions/UInt64"
        },
        "contract_id" : {
          "description" : "Contract's pub_key",
          "$ref" : "#/definitions/EncodedPubkey"
        },
        "abi_version" : {
          "description" : "ABI version",
          "$ref" : "#/definitions/UInt16"
        },
        "fee" : {
          "$ref" : "#/definitions/UInt"
        },
        "ttl" : {
          "$ref" : "#/definitions/UInt64"
        },
        "amount" : {
          "$ref" : "#/definitions/UInt"
        },
        "gas" : {
          "$ref" : "#/definitions/UInt64"
        },
        "gas_price" : {
          "$ref" : "#/definitions/UInt"
        },
        "call_data" : {
          "description" : "Contract call data",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "call_data" : { },
        "caller_id" : { },
        "fee" : { },
        "abi_version" : { },
        "nonce" : { }
      }
    },
    "UnsignedTx" : {
      "type" : "object",
      "required" : [ "tx" ],
      "properties" : {
        "tx" : {
          "description" : "Unsigned transaction object",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "tx" : { }
      }
    },
    "PostTxResponse" : {
      "type" : "object",
      "required" : [ "tx_hash" ],
      "properties" : {
        "tx_hash" : {
          "description" : "Hash of a signed transaction",
          "$ref" : "#/definitions/EncodedHash"
        }
      },
      "example" : {
        "tx_hash" : { }
      }
    },
    "CreateContractUnsignedTx" : {
      "allOf" : [ {
        "$ref" : "#/definitions/UnsignedTx"
      }, {
        "type" : "object",
        "required" : [ "contract_id" ],
        "properties" : {
          "contract_id" : {
            "description" : "Address of the contract to be created",
            "$ref" : "#/definitions/EncodedPubkey"
          }
        }
      } ]
    },
    "PoI" : {
      "type" : "object",
      "required" : [ "poi" ],
      "properties" : {
        "poi" : {
          "description" : "Proof of inclusion",
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "poi" : { }
      }
    },
    "Generation" : {
      "type" : "object",
      "required" : [ "key_block", "micro_blocks" ],
      "properties" : {
        "key_block" : {
          "$ref" : "#/definitions/KeyBlock"
        },
        "micro_blocks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EncodedPubkey"
          }
        }
      },
      "example" : {
        "micro_blocks" : [ { }, { } ],
        "key_block" : {
          "miner" : { },
          "target" : { },
          "pow" : "",
          "hash" : { },
          "height" : { },
          "info" : { }
        }
      }
    },
    "OffChainUpdate" : {
      "type" : "object",
      "required" : [ "op" ],
      "discriminator" : "op",
      "properties" : {
        "op" : {
          "type" : "string"
        }
      }
    },
    "OffChainTransfer" : {
      "allOf" : [ {
        "$ref" : "#/definitions/OffChainUpdate"
      }, {
        "type" : "object",
        "required" : [ "amount", "from", "to" ],
        "properties" : {
          "from" : {
            "description" : "Sender of tokens",
            "$ref" : "#/definitions/EncodedPubkey"
          },
          "to" : {
            "description" : "Receiver of tokens",
            "$ref" : "#/definitions/EncodedPubkey"
          },
          "amount" : {
            "$ref" : "#/definitions/UInt"
          }
        }
      } ]
    },
    "OffChainWithdrawal" : {
      "allOf" : [ {
        "$ref" : "#/definitions/OffChainUpdate"
      }, {
        "type" : "object",
        "required" : [ "amount", "to" ],
        "properties" : {
          "to" : {
            "description" : "Withdrawer of tokens",
            "$ref" : "#/definitions/EncodedPubkey"
          },
          "amount" : {
            "$ref" : "#/definitions/UInt"
          }
        }
      } ]
    },
    "OffChainDeposit" : {
      "allOf" : [ {
        "$ref" : "#/definitions/OffChainUpdate"
      }, {
        "type" : "object",
        "required" : [ "amount", "from" ],
        "properties" : {
          "from" : {
            "description" : "Depositor of tokens",
            "$ref" : "#/definitions/EncodedPubkey"
          },
          "amount" : {
            "$ref" : "#/definitions/UInt"
          }
        }
      } ]
    },
    "OffChainNewContract" : {
      "allOf" : [ {
        "$ref" : "#/definitions/OffChainUpdate"
      }, {
        "type" : "object",
        "required" : [ "abi_version", "call_data", "code", "deposit", "owner", "vm_version" ],
        "properties" : {
          "owner" : {
            "description" : "Contract owner",
            "$ref" : "#/definitions/EncodedPubkey"
          },
          "vm_version" : {
            "$ref" : "#/definitions/UInt16"
          },
          "abi_version" : {
            "$ref" : "#/definitions/UInt16"
          },
          "code" : {
            "$ref" : "#/definitions/ByteCode"
          },
          "deposit" : {
            "$ref" : "#/definitions/UInt"
          },
          "call_data" : {
            "description" : "Contract call data",
            "$ref" : "#/definitions/EncodedByteArray"
          }
        }
      } ]
    },
    "OffChainCallContract" : {
      "allOf" : [ {
        "$ref" : "#/definitions/OffChainUpdate"
      }, {
        "type" : "object",
        "required" : [ "abi_version", "amount", "call_data", "caller", "contract", "gas", "gas_price" ],
        "properties" : {
          "caller" : {
            "description" : "Contract caller",
            "$ref" : "#/definitions/EncodedPubkey"
          },
          "contract" : {
            "description" : "Contract address",
            "$ref" : "#/definitions/EncodedPubkey"
          },
          "abi_version" : {
            "$ref" : "#/definitions/UInt16"
          },
          "amount" : {
            "$ref" : "#/definitions/UInt"
          },
          "gas" : {
            "$ref" : "#/definitions/UInt64"
          },
          "gas_price" : {
            "$ref" : "#/definitions/UInt"
          },
          "call_data" : {
            "description" : "Contract call data",
            "$ref" : "#/definitions/EncodedByteArray"
          }
        }
      } ]
    },
    "TokenSupply" : {
      "type" : "object",
      "properties" : {
        "accounts" : {
          "description" : "Tokens in account balances",
          "$ref" : "#/definitions/UInt"
        },
        "contracts" : {
          "description" : "Tokens in contracts",
          "$ref" : "#/definitions/UInt"
        },
        "contract_oracles" : {
          "description" : "Tokens in contracts registered as oracles",
          "$ref" : "#/definitions/UInt"
        },
        "locked" : {
          "description" : "Tokens locked (not owned by anyone)",
          "$ref" : "#/definitions/UInt"
        },
        "oracles" : {
          "description" : "Tokens in accounts registered as oracles",
          "$ref" : "#/definitions/UInt"
        },
        "oracle_queries" : {
          "description" : "Tokens in pending oracle queries",
          "$ref" : "#/definitions/UInt"
        },
        "pending_rewards" : {
          "description" : "Tokens from fees and coinbase pending in the beneficiary reward delay",
          "$ref" : "#/definitions/UInt"
        },
        "total" : {
          "description" : "Sum of all tokens from other fields",
          "$ref" : "#/definitions/UInt"
        }
      },
      "example" : {
        "accounts" : { }
      }
    },
    "inline_response_200" : {
      "properties" : {
        "hash" : {
          "$ref" : "#/definitions/EncodedHash"
        }
      },
      "example" : {
        "hash" : { }
      }
    },
    "inline_response_200_1" : {
      "properties" : {
        "height" : {
          "$ref" : "#/definitions/UInt64"
        }
      },
      "example" : {
        "height" : { }
      }
    },
    "inline_response_200_2" : {
      "properties" : {
        "count" : {
          "description" : "Count",
          "$ref" : "#/definitions/UInt32"
        }
      },
      "example" : {
        "count" : { }
      }
    },
    "ContractStore_store" : {
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "$ref" : "#/definitions/EncodedByteArray"
        }
      },
      "example" : {
        "value" : { },
        "key" : "key"
      }
    }
  },
  "parameters" : {
    "HeightIn" : {
      "name" : "height",
      "in" : "path",
      "description" : "The height",
      "required" : true,
      "type" : "integer",
      "maximum" : 18446744073709551615,
      "minimum" : 0
    },
    "SaltIn" : {
      "name" : "salt",
      "in" : "query",
      "description" : "Salt",
      "required" : true,
      "type" : "integer",
      "minimum" : 0
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Aeternity",
    "url" : "http://www.aeternity.com"
  }
}
