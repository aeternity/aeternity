{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the [Aeternity](https://www.aeternity.com/) Epoch API.",
    "version" : "1.0.0",
    "title" : "Aeternity Epoch",
    "termsOfService" : "https://www.aeternity.com/terms/",
    "contact" : {
      "email" : "apiteam@aeternity.com"
    }
  },
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "external",
    "description" : "External API"
  }, {
    "name" : "internal",
    "description" : "Internal API"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/ping" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "",
        "operationId" : "Ping",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Ping a peer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Ping"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Sample response",
            "schema" : {
              "$ref" : "#/definitions/Ping"
            }
          },
          "404" : {
            "description" : "Different genesis blocks",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/top" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get the top block header",
        "operationId" : "GetTop",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Top"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/block-by-height" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get a block by height",
        "operationId" : "GetBlockByHeight",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "height",
          "in" : "query",
          "description" : "Height of the block to fetch",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "The block being found",
            "schema" : {
              "$ref" : "#/definitions/Block"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/block-by-hash" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get a block by hash",
        "operationId" : "GetBlockByHash",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "query",
          "description" : "Hash of the block to fetch",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The block being found",
            "schema" : {
              "$ref" : "#/definitions/Block"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/block" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Post a new block",
        "operationId" : "PostBlock",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Put a new block to node",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Block"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Block or header validation error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/tx" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Post a new transaction",
        "operationId" : "PostTx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Put a new transaction to node",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Tx"
          }
        } ]
      }
    },
    "/transactions" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get transactions in the mempool",
        "operationId" : "GetTxs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Transactions"
            }
          }
        }
      }
    },
    "/account/balance" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get account's balance",
        "operationId" : "GetAccountBalance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pub_key",
          "in" : "query",
          "description" : "Public key to extract balance for",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Account's balance",
            "schema" : {
              "$ref" : "#/definitions/Balance"
            }
          },
          "404" : {
            "description" : "Account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/spend-tx" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create spend transaction",
        "operationId" : "PostSpendTx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Creates new spend transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SpendTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Spend transaction validation error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    }
  },
  "definitions" : {
    "Block" : {
      "type" : "object",
      "properties" : {
        "height" : {
          "type" : "integer",
          "format" : "int64"
        },
        "prev_hash" : {
          "type" : "string"
        },
        "state_hash" : {
          "type" : "string"
        },
        "txs_hash" : {
          "type" : "string"
        },
        "target" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "uint64"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "pow" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tx"
          }
        }
      }
    },
    "Top" : {
      "type" : "object",
      "properties" : {
        "height" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hash" : {
          "type" : "string"
        },
        "prev_hash" : {
          "type" : "string"
        },
        "state_hash" : {
          "type" : "string"
        },
        "txs_hash" : {
          "type" : "string"
        },
        "difficulty" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "uint64"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "pow" : {
          "type" : "string"
        }
      }
    },
    "Ping" : {
      "type" : "object",
      "properties" : {
        "source" : {
          "type" : "string"
        },
        "genesis_hash" : {
          "type" : "string"
        },
        "best_hash" : {
          "type" : "string"
        },
        "difficulty" : {
          "type" : "number"
        },
        "share" : {
          "type" : "integer",
          "format" : "int64"
        },
        "peers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string"
        }
      }
    },
    "Balance" : {
      "type" : "object",
      "properties" : {
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SpendTx" : {
      "type" : "object",
      "properties" : {
        "sender_pubkey" : {
          "type" : "string"
        },
        "recipient_pubkey" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fee" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Tx" : {
      "type" : "object",
      "properties" : {
        "tx" : {
          "type" : "string"
        }
      }
    },
    "Transactions" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Tx"
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Aeternity",
    "url" : "http://www.aeternity.com"
  }
}
