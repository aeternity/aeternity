{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the [Aeternity](https://www.aeternity.com/) Epoch API.",
    "version" : "1.0.0",
    "title" : "Aeternity Epoch",
    "termsOfService" : "https://www.aeternity.com/terms/",
    "contact" : {
      "email" : "apiteam@aeternity.com"
    }
  },
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "external",
    "description" : "External API"
  }, {
    "name" : "internal",
    "description" : "Internal API"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/ping" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "",
        "operationId" : "Ping",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Ping a peer",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Ping"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Sample response",
            "schema" : {
              "$ref" : "#/definitions/Ping"
            }
          },
          "403" : {
            "description" : "Not allowed (node is blocked)",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "409" : {
            "description" : "Different genesis blocks",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/top" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get the top block header",
        "operationId" : "GetTop",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Top"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/block-by-height" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get a block by height",
        "operationId" : "GetBlockByHeight",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "height",
          "in" : "query",
          "description" : "Height of the block to fetch",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "The block being found",
            "schema" : {
              "$ref" : "#/definitions/Block"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/block-by-hash" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get a block by hash",
        "operationId" : "GetBlockByHash",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hash",
          "in" : "query",
          "description" : "Hash of the block to fetch",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The block being found",
            "schema" : {
              "$ref" : "#/definitions/Block"
            }
          },
          "400" : {
            "description" : "Invalid hash",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Block not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/block" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Post a new block",
        "operationId" : "PostBlock",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Put a new block to node",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Block"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Block or header validation error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/tx" : {
      "post" : {
        "tags" : [ "external" ],
        "description" : "Post a new transaction",
        "operationId" : "PostTx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Put a new transaction to node",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Tx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "400" : {
            "description" : "Invalid transaction",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/transactions" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get transactions in the mempool",
        "operationId" : "GetTxs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Transactions"
            }
          }
        }
      }
    },
    "/account/balance" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get account's balance",
        "operationId" : "GetAccountBalance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pub_key",
          "in" : "query",
          "description" : "Public key to extract balance for",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Account's balance",
            "schema" : {
              "$ref" : "#/definitions/Balance"
            }
          },
          "400" : {
            "description" : "Invalid address",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Account not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/spend-tx" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create spend transaction",
        "operationId" : "PostSpendTx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Creates new spend transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SpendTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Spend transaction validation error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/oracles" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get active registered oracles",
        "operationId" : "GetActiveRegisteredOracles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Active registered oracles",
            "schema" : {
              "$ref" : "#/definitions/RegisteredOracles"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/oracle-questions" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get active oracle questions",
        "operationId" : "GetOracleQuestions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "oracle_pub_key",
          "in" : "query",
          "description" : "Oracle public key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Active oracle questions",
            "schema" : {
              "$ref" : "#/definitions/OracleQuestions"
            }
          },
          "404" : {
            "description" : "Oracle not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/oracle-register-tx" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create oracle register transaction",
        "operationId" : "PostOracleRegisterTx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Creates new oracle register transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleRegisterTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Oracle register transaction validation error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/oracle-query-tx" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create oracle query transaction",
        "operationId" : "PostOracleQueryTx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Creates new oracle query transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleQueryTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OracleInteractionId"
            }
          },
          "404" : {
            "description" : "Oracle query transaction validation error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/oracle-response-tx" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create oracle response transaction",
        "operationId" : "PostOracleResponseTx",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Creates new oracle response transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleResponseTx"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Oracle response transaction validation error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/oracle-subscribe" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Create oracle interactions subscription",
        "operationId" : "PostOracleSubscribe",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Creates new subscription for oracle interactions",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleSubscribe"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Oracle not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/oracle-unsubscribe" : {
      "post" : {
        "tags" : [ "internal" ],
        "description" : "Remove oracle interactions subscriptions",
        "operationId" : "PostOracleUnsubscribe",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Unsubscribe from oracle interactions notifications",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OracleSubscribe"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "404" : {
            "description" : "Oracle or subscription not found",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/account/pub-key" : {
      "get" : {
        "tags" : [ "internal" ],
        "description" : "Get user's public key address",
        "operationId" : "GetPubKey",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PubKey"
            }
          },
          "404" : {
            "description" : "No key pair",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/balances" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get all users' balances",
        "operationId" : "GetAccountsBalances",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountsBalances"
            }
          },
          "403" : {
            "description" : "Balances not enabled",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/version" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get node's version",
        "operationId" : "GetVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Version"
            }
          }
        },
        "security" : [ ]
      }
    },
    "/info" : {
      "get" : {
        "tags" : [ "external" ],
        "description" : "Get node info",
        "operationId" : "GetInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Info"
            }
          },
          "403" : {
            "description" : "Info not enabled",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ ]
      }
    }
  },
  "definitions" : {
    "Block" : {
      "type" : "object",
      "properties" : {
        "height" : {
          "type" : "integer",
          "format" : "int64"
        },
        "prev_hash" : {
          "type" : "string"
        },
        "state_hash" : {
          "type" : "string"
        },
        "txs_hash" : {
          "type" : "string"
        },
        "target" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "uint64"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "pow" : {
          "type" : "array",
          "items" : {
            "type" : "integer"
          }
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tx"
          }
        }
      }
    },
    "Top" : {
      "type" : "object",
      "properties" : {
        "height" : {
          "type" : "integer",
          "format" : "int64"
        },
        "hash" : {
          "type" : "string"
        },
        "prev_hash" : {
          "type" : "string"
        },
        "state_hash" : {
          "type" : "string"
        },
        "txs_hash" : {
          "type" : "string"
        },
        "difficulty" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nonce" : {
          "type" : "integer",
          "format" : "uint64"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "pow" : {
          "type" : "string"
        }
      }
    },
    "Ping" : {
      "type" : "object",
      "required" : [ "best_hash", "difficulty", "genesis_hash", "source" ],
      "properties" : {
        "source" : {
          "type" : "string"
        },
        "genesis_hash" : {
          "type" : "string"
        },
        "best_hash" : {
          "type" : "string"
        },
        "difficulty" : {
          "type" : "number"
        },
        "share" : {
          "type" : "integer",
          "format" : "int64"
        },
        "peers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Balance" : {
      "type" : "object",
      "properties" : {
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Tx" : {
      "type" : "object",
      "properties" : {
        "tx" : {
          "type" : "string"
        }
      }
    },
    "Transactions" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Tx"
      }
    },
    "RegisteredOracles" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RegisteredOracles_inner"
      }
    },
    "OracleQuestions" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/OracleQuestions_inner"
      }
    },
    "OracleSubscribe" : {
      "type" : "object",
      "properties" : {
        "oracle_pub_key" : {
          "type" : "string"
        }
      }
    },
    "SpendTx" : {
      "type" : "object",
      "properties" : {
        "recipient_pubkey" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fee" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "OracleRegisterTx" : {
      "type" : "object",
      "properties" : {
        "query_format" : {
          "type" : "string"
        },
        "response_format" : {
          "type" : "string"
        },
        "query_fee" : {
          "type" : "integer",
          "format" : "int64"
        },
        "fee" : {
          "type" : "integer",
          "format" : "int64"
        },
        "ttl" : {
          "$ref" : "#/definitions/TTL"
        }
      }
    },
    "OracleQueryTx" : {
      "type" : "object",
      "properties" : {
        "oracle_pubkey" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "query_fee" : {
          "type" : "integer",
          "format" : "int64"
        },
        "query_ttl" : {
          "$ref" : "#/definitions/TTL"
        },
        "response_ttl" : {
          "$ref" : "#/definitions/RelativeTTL"
        },
        "fee" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "OracleResponseTx" : {
      "type" : "object",
      "properties" : {
        "interaction_id" : {
          "type" : "string"
        },
        "response" : {
          "type" : "string"
        },
        "fee" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "TTL" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "delta", "block" ]
        },
        "value" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "RelativeTTL" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "delta" ]
        },
        "value" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "OracleInteractionId" : {
      "type" : "object",
      "properties" : {
        "interaction_id" : {
          "type" : "string"
        }
      }
    },
    "PubKey" : {
      "type" : "object",
      "properties" : {
        "pub_key" : {
          "type" : "string"
        }
      }
    },
    "AccountsBalances" : {
      "type" : "object",
      "properties" : {
        "accounts_balances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountBalance"
          }
        }
      }
    },
    "AccountBalance" : {
      "type" : "object",
      "properties" : {
        "pub_key" : {
          "type" : "string"
        },
        "balance" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Version" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string"
        },
        "revision" : {
          "type" : "string"
        },
        "genesis_hash" : {
          "type" : "string"
        }
      }
    },
    "Info" : {
      "type" : "object",
      "properties" : {
        "last_30_blocks_time" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BlockTimeSummary"
          }
        }
      }
    },
    "BlockTimeSummary" : {
      "type" : "object",
      "properties" : {
        "height" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time_delta_to_parent" : {
          "type" : "integer",
          "format" : "int64"
        },
        "difficulty" : {
          "type" : "number"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string"
        }
      }
    },
    "RegisteredOracles_inner" : {
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "query_format" : {
          "type" : "string"
        },
        "response_format" : {
          "type" : "string"
        },
        "query_fee" : {
          "type" : "string"
        },
        "expires_at" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "OracleQuestions_inner" : {
      "properties" : {
        "interaction_id" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "query_fee" : {
          "type" : "string"
        },
        "expires_at" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Aeternity",
    "url" : "http://www.aeternity.com"
  }
}
