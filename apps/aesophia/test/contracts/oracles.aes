
contract Oracles =

  function registerOracle(acct : address,
                          sign : int,   // Signed account address
                          fee  : int,
                          ttl  : int) : oracle(int, int) = // oracle(string, int) =
    Oracle.register(acct, sign, fee, ttl)
/*
  function queryFee(o : oracle(string, int)) : int =
    Oracle.query_fee(o)

  function createQuery(o    : oracle(string, int),
                       q    : string,
                       fee  : int,
                       qttl : int,
                       rttl : int) : oracle_query(string, int) =
    Oracle.query(o, q, fee, qttl, rttl)

  function extendOracle(o    : oracle(string, int),
                        sign : int,   // Signed oracle address
                        fee  : int,
                        ttl  : int) : () =
    Oracle.extend(o, sign, fee, ttl)

  function respond(q : oracle_query(string, int), sign : int, r : int) =
    Oracle.respond(q, sign, r)

  function getQuestion(q : oracle_query(string, int)) : string =
    Oracle.get_question(q)

  function hasAnswer(q : oracle_query(string, int)) =
    switch(Oracle.get_answer(q))
      None    => false
      Some(_) => true

  function getAnswer(q : oracle_query(string, int)) : option(int) =
    Oracle.get_answer(q)
*/
