%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
{application, aecore,
 [{description, "Blockchain for aeapps"},
  {vsn, "0.1.0"},
  {registered, []},
  {mod, { aecore_app, []}},
  {start_phases, [
                  {start_reporters, []}
                 ]},
  {applications,
   [kernel,
    stdlib,
    crypto,
    syntax_tools,
    compiler,
    goldrush,
    gproc,
    jobs,
    hut,
    setup,
    bear,
    folsom,
    exometer_core,
    yamerl,
    lager,
    gb_merkle_trees,
    aeutils,
    msgpack,
    erlexec,
    aecuckoo
   ]},
  {env, [
         {exometer_predefined,
          {script, "$PRIV_DIR/exometer_predefined.script"}},
         {exometer_defaults,
          [
           {['_'], chain_probe, [
                                 {module, aec_chain_metrics_probe},
                                 {cache, 5000},
                                 {options, [{sample_interval, 5000}]}
                                ]}
          ]},
         {exometer_subscribers,
          [
           {select,
            {[
              {{[ae,epoch|'_'],counter,enabled},[],['$_']},
              {{[ae,epoch|'_'],gauge,enabled},[],['$_']}
             ],
             aec_metrics_main, [value], default, true}},
           {select,
            {[
              {{[ae,epoch|'_'],'$1',enabled},[{'=/=','$1',counter},
                                              {'=/=','$1',gauge}], ['$_']}
             ],
             aec_metrics_main, default, default, true}}
          ]},
        {'$setup_hooks',
         [
          {normal, [
                    {110, {aec_peers, check_env, []}},
                    {110, {aecore_app, check_env, []}}
                   ]}
         ]}
        ]},
  {modules, []},

  {maintainers, []},
  {licenses, []},
  {links, []}
 ]}.
