%% -*- erlang -*-

IsWindows = case os:type() of {win32, _} -> true; {_, _} -> false end,

FilterRelxRocksDb = fun(Apps) ->
                        case IsWindows of
                            false ->
                                Apps;
                            true ->
                                Apps -- [rocksdb, mnesia_rocksdb]
                        end
                    end,

FilterDepsRocksDb = fun(Deps) ->
                        case IsWindows of
                            false ->
                                Deps;
                            true ->
                                [D || {K, _} = D <- Deps, K =/= rocksdb, K =/= mnesia_rocksdb]
                        end
                    end,

OverlayReplacements = [
                       "bin/epoch",
                       "bin/extensions/check_config",
                       "bin/extensions/keys_gen",
                       "bin/extensions/peer_key",
                       "bin/extensions/messages_hash",
                       "bin/extensions/export_chain"
                      ],

AdaptOverlayBin = fun(Overlay) ->
                      case IsWindows of
                          false ->
                              Overlay;
                          true ->
                              lists:foldl(
                                fun({Action, Src0, Dest0}, Acc0) ->
                                    case lists:member(Dest0, OverlayReplacements) of
                                        true ->
                                            Src = filename:rootname(Src0) ++ ".cmd",
                                            Dest = filename:rootname(Dest0) ++ ".cmd",
                                            lists:keyreplace(Dest0, 3, Acc0, {Action, Src, Dest});
                                        false ->
                                            Acc0
                                    end
                                end, Overlay, Overlay)
                      end
                  end,

%% Update relx config
Relx0 = lists:keyfind(relx, 1, CONFIG),
{relx, [{release, {aeternity, _}, RelxApps0} | RelxT0]} = Relx0,
{overlay, RelxOverlay0} = lists:keyfind(overlay, 1, RelxT0),
RelxT1 = lists:keyreplace(overlay, 1, RelxT0, {overlay, AdaptOverlayBin(RelxOverlay0)}),
{ok, VersionBin} = file:read_file(<<"VERSION">>),
Version = string:trim(binary_to_list(VersionBin)),
%% the release should be in front
Relx = {relx, [{release, {aeternity, Version}, FilterRelxRocksDb(RelxApps0)}] ++ RelxT1},
CONFIG1 = lists:keyreplace(relx, 1, CONFIG, Relx),

%% Update rebar deps
{deps, Deps0} = lists:keyfind(deps, 1, CONFIG1),
lists:keyreplace(deps, 1, CONFIG1, {deps, FilterDepsRocksDb(Deps0)}).
